// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/profiler/protobuf/steps_db.proto

#include "tensorflow/core/profiler/protobuf/steps_db.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fany_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Any_google_2fprotobuf_2fany_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AllReduceDbResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AllReduceInfo_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FlowDbResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FlowEventInfo_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenericStepBreakdown_TypePsEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OpMetrics_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_PerCoreStepInfo_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StepInfoResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto;
namespace tensorflow {
namespace profiler {
class GenericStepBreakdown_TypePsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GenericStepBreakdown_TypePsEntry_DoNotUse> _instance;
} _GenericStepBreakdown_TypePsEntry_DoNotUse_default_instance_;
class GenericStepBreakdownDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GenericStepBreakdown> _instance;
} _GenericStepBreakdown_default_instance_;
class StepInfoResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StepInfoResult> _instance;
} _StepInfoResult_default_instance_;
class FlowEventInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FlowEventInfo> _instance;
} _FlowEventInfo_default_instance_;
class FlowDbResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FlowDbResult> _instance;
} _FlowDbResult_default_instance_;
class AllReduceInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AllReduceInfo> _instance;
} _AllReduceInfo_default_instance_;
class AllReduceDbResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AllReduceDbResult> _instance;
} _AllReduceDbResult_default_instance_;
class PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse> _instance;
} _PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse_default_instance_;
class PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse> _instance;
} _PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse_default_instance_;
class PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse> _instance;
} _PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse_default_instance_;
class PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse> _instance;
} _PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse_default_instance_;
class PerCoreStepInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PerCoreStepInfo> _instance;
} _PerCoreStepInfo_default_instance_;
class StepDatabaseResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StepDatabaseResult> _instance;
} _StepDatabaseResult_default_instance_;
}  // namespace profiler
}  // namespace tensorflow
static void InitDefaultsscc_info_AllReduceDbResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_AllReduceDbResult_default_instance_;
    new (ptr) ::tensorflow::profiler::AllReduceDbResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::AllReduceDbResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AllReduceDbResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AllReduceDbResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto}, {
      &scc_info_AllReduceInfo_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base,}};

static void InitDefaultsscc_info_AllReduceInfo_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_AllReduceInfo_default_instance_;
    new (ptr) ::tensorflow::profiler::AllReduceInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::AllReduceInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AllReduceInfo_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AllReduceInfo_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto}, {}};

static void InitDefaultsscc_info_FlowDbResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_FlowDbResult_default_instance_;
    new (ptr) ::tensorflow::profiler::FlowDbResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::FlowDbResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FlowDbResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_FlowDbResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto}, {
      &scc_info_FlowEventInfo_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base,}};

static void InitDefaultsscc_info_FlowEventInfo_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_FlowEventInfo_default_instance_;
    new (ptr) ::tensorflow::profiler::FlowEventInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::FlowEventInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FlowEventInfo_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FlowEventInfo_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto}, {}};

static void InitDefaultsscc_info_GenericStepBreakdown_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_GenericStepBreakdown_default_instance_;
    new (ptr) ::tensorflow::profiler::GenericStepBreakdown();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::GenericStepBreakdown::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GenericStepBreakdown_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GenericStepBreakdown_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto}, {
      &scc_info_GenericStepBreakdown_TypePsEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base,}};

static void InitDefaultsscc_info_GenericStepBreakdown_TypePsEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_GenericStepBreakdown_TypePsEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::profiler::GenericStepBreakdown_TypePsEntry_DoNotUse();
  }
  ::tensorflow::profiler::GenericStepBreakdown_TypePsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenericStepBreakdown_TypePsEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GenericStepBreakdown_TypePsEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto}, {}};

static void InitDefaultsscc_info_PerCoreStepInfo_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_PerCoreStepInfo_default_instance_;
    new (ptr) ::tensorflow::profiler::PerCoreStepInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::PerCoreStepInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_PerCoreStepInfo_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_PerCoreStepInfo_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto}, {
      &scc_info_PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base,
      &scc_info_OpMetrics_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto.base,
      &scc_info_PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base,
      &scc_info_PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base,
      &scc_info_PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base,}};

static void InitDefaultsscc_info_PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::profiler::PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse();
  }
  ::tensorflow::profiler::PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto}, {
      &scc_info_AllReduceDbResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base,}};

static void InitDefaultsscc_info_PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::profiler::PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse();
  }
  ::tensorflow::profiler::PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto}, {}};

static void InitDefaultsscc_info_PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::profiler::PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse();
  }
  ::tensorflow::profiler::PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto}, {
      &scc_info_FlowDbResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base,}};

static void InitDefaultsscc_info_PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::profiler::PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse();
  }
  ::tensorflow::profiler::PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto}, {
      &scc_info_StepInfoResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base,}};

static void InitDefaultsscc_info_StepDatabaseResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_StepDatabaseResult_default_instance_;
    new (ptr) ::tensorflow::profiler::StepDatabaseResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::StepDatabaseResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StepDatabaseResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StepDatabaseResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto}, {
      &scc_info_PerCoreStepInfo_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base,}};

static void InitDefaultsscc_info_StepInfoResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::profiler::_StepInfoResult_default_instance_;
    new (ptr) ::tensorflow::profiler::StepInfoResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::profiler::StepInfoResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StepInfoResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StepInfoResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto[13];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::GenericStepBreakdown_TypePsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::GenericStepBreakdown_TypePsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::GenericStepBreakdown_TypePsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::GenericStepBreakdown_TypePsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::GenericStepBreakdown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::GenericStepBreakdown, type_ps_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::StepInfoResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::StepInfoResult, step_num_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::StepInfoResult, duration_ps_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::StepInfoResult, begin_ps_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::StepInfoResult, step_breakdown_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::FlowEventInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::FlowEventInfo, flow_id_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::FlowEventInfo, channel_id_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::FlowEventInfo, name_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::FlowEventInfo, category_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::FlowEventInfo, start_time_ps_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::FlowEventInfo, end_time_ps_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::FlowEventInfo, byte_size_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::FlowEventInfo, replica_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::FlowDbResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::FlowDbResult, flow_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::AllReduceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::AllReduceInfo, id_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::AllReduceInfo, name_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::AllReduceInfo, all_reduce_id_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::AllReduceInfo, start_time_ps_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::AllReduceInfo, end_time_ps_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::AllReduceInfo, byte_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::AllReduceDbResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::AllReduceDbResult, all_reduce_info_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::PerCoreStepInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::PerCoreStepInfo, step_num_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::PerCoreStepInfo, step_info_per_core_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::PerCoreStepInfo, hlo_metrics_db_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::PerCoreStepInfo, flow_db_per_core_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::PerCoreStepInfo, core_id_to_replica_id_map_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::PerCoreStepInfo, all_reduce_db_per_core_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::StepDatabaseResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::profiler::StepDatabaseResult, step_sequence_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::tensorflow::profiler::GenericStepBreakdown_TypePsEntry_DoNotUse)},
  { 9, -1, sizeof(::tensorflow::profiler::GenericStepBreakdown)},
  { 15, -1, sizeof(::tensorflow::profiler::StepInfoResult)},
  { 24, -1, sizeof(::tensorflow::profiler::FlowEventInfo)},
  { 37, -1, sizeof(::tensorflow::profiler::FlowDbResult)},
  { 43, -1, sizeof(::tensorflow::profiler::AllReduceInfo)},
  { 54, -1, sizeof(::tensorflow::profiler::AllReduceDbResult)},
  { 60, 67, sizeof(::tensorflow::profiler::PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse)},
  { 69, 76, sizeof(::tensorflow::profiler::PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse)},
  { 78, 85, sizeof(::tensorflow::profiler::PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse)},
  { 87, 94, sizeof(::tensorflow::profiler::PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse)},
  { 96, -1, sizeof(::tensorflow::profiler::PerCoreStepInfo)},
  { 107, -1, sizeof(::tensorflow::profiler::StepDatabaseResult)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::profiler::_GenericStepBreakdown_TypePsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::profiler::_GenericStepBreakdown_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::profiler::_StepInfoResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::profiler::_FlowEventInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::profiler::_FlowDbResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::profiler::_AllReduceInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::profiler::_AllReduceDbResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::profiler::_PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::profiler::_PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::profiler::_PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::profiler::_PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::profiler::_PerCoreStepInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::profiler::_StepDatabaseResult_default_instance_),
};

const char descriptor_table_protodef_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n0tensorflow/core/profiler/protobuf/step"
  "s_db.proto\022\023tensorflow.profiler\032\031google/"
  "protobuf/any.proto\0322tensorflow/core/prof"
  "iler/protobuf/op_metrics.proto\"\215\001\n\024Gener"
  "icStepBreakdown\022F\n\007type_ps\030\001 \003(\01325.tenso"
  "rflow.profiler.GenericStepBreakdown.Type"
  "PsEntry\032-\n\013TypePsEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005v"
  "alue\030\002 \001(\004:\0028\001\"w\n\016StepInfoResult\022\020\n\010step"
  "_num\030\001 \001(\r\022\023\n\013duration_ps\030\002 \001(\004\022\020\n\010begin"
  "_ps\030\003 \001(\004\022,\n\016step_breakdown\030\004 \001(\0132\024.goog"
  "le.protobuf.Any\"\247\001\n\rFlowEventInfo\022\017\n\007flo"
  "w_id\030\001 \001(\004\022\022\n\nchannel_id\030\002 \001(\003\022\014\n\004name\030\003"
  " \001(\t\022\020\n\010category\030\004 \001(\t\022\025\n\rstart_time_ps\030"
  "\005 \001(\004\022\023\n\013end_time_ps\030\006 \001(\004\022\021\n\tbyte_size\030"
  "\007 \001(\004\022\022\n\nreplica_id\030\010 \001(\r\"E\n\014FlowDbResul"
  "t\0225\n\tflow_info\030\001 \003(\0132\".tensorflow.profil"
  "er.FlowEventInfo\"\177\n\rAllReduceInfo\022\n\n\002id\030"
  "\001 \001(\004\022\014\n\004name\030\002 \001(\t\022\025\n\rall_reduce_id\030\003 \001"
  "(\004\022\025\n\rstart_time_ps\030\004 \001(\004\022\023\n\013end_time_ps"
  "\030\005 \001(\004\022\021\n\tbyte_size\030\006 \001(\004\"P\n\021AllReduceDb"
  "Result\022;\n\017all_reduce_info\030\001 \003(\0132\".tensor"
  "flow.profiler.AllReduceInfo\"\236\006\n\017PerCoreS"
  "tepInfo\022\020\n\010step_num\030\001 \001(\r\022U\n\022step_info_p"
  "er_core\030\002 \003(\01329.tensorflow.profiler.PerC"
  "oreStepInfo.StepInfoPerCoreEntry\0228\n\016hlo_"
  "metrics_db\030\003 \001(\0132 .tensorflow.profiler.O"
  "pMetricsDb\022Q\n\020flow_db_per_core\030\004 \003(\01327.t"
  "ensorflow.profiler.PerCoreStepInfo.FlowD"
  "bPerCoreEntry\022a\n\031core_id_to_replica_id_m"
  "ap\030\005 \003(\0132>.tensorflow.profiler.PerCoreSt"
  "epInfo.CoreIdToReplicaIdMapEntry\022\\\n\026all_"
  "reduce_db_per_core\030\006 \003(\0132<.tensorflow.pr"
  "ofiler.PerCoreStepInfo.AllReduceDbPerCor"
  "eEntry\032[\n\024StepInfoPerCoreEntry\022\013\n\003key\030\001 "
  "\001(\r\0222\n\005value\030\002 \001(\0132#.tensorflow.profiler"
  ".StepInfoResult:\0028\001\032W\n\022FlowDbPerCoreEntr"
  "y\022\013\n\003key\030\001 \001(\r\0220\n\005value\030\002 \001(\0132!.tensorfl"
  "ow.profiler.FlowDbResult:\0028\001\032;\n\031CoreIdTo"
  "ReplicaIdMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030"
  "\002 \001(\r:\0028\001\032a\n\027AllReduceDbPerCoreEntry\022\013\n\003"
  "key\030\001 \001(\r\0225\n\005value\030\002 \001(\0132&.tensorflow.pr"
  "ofiler.AllReduceDbResult:\0028\001\"Q\n\022StepData"
  "baseResult\022;\n\rstep_sequence\030\001 \003(\0132$.tens"
  "orflow.profiler.PerCoreStepInfob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto_deps[2] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto_sccs[13] = {
  &scc_info_AllReduceDbResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base,
  &scc_info_AllReduceInfo_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base,
  &scc_info_FlowDbResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base,
  &scc_info_FlowEventInfo_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base,
  &scc_info_GenericStepBreakdown_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base,
  &scc_info_GenericStepBreakdown_TypePsEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base,
  &scc_info_PerCoreStepInfo_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base,
  &scc_info_PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base,
  &scc_info_PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base,
  &scc_info_PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base,
  &scc_info_PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base,
  &scc_info_StepDatabaseResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base,
  &scc_info_StepInfoResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto_once;
static bool descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto = {
  &descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto_initialized, descriptor_table_protodef_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto, "tensorflow/core/profiler/protobuf/steps_db.proto", 1759,
  &descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto_once, descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto_sccs, descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto_deps, 13, 2,
  schemas, file_default_instances, TableStruct_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto::offsets,
  file_level_metadata_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto, 13, file_level_enum_descriptors_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto, file_level_service_descriptors_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto), true);
namespace tensorflow {
namespace profiler {

// ===================================================================

GenericStepBreakdown_TypePsEntry_DoNotUse::GenericStepBreakdown_TypePsEntry_DoNotUse() {}
GenericStepBreakdown_TypePsEntry_DoNotUse::GenericStepBreakdown_TypePsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GenericStepBreakdown_TypePsEntry_DoNotUse::MergeFrom(const GenericStepBreakdown_TypePsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GenericStepBreakdown_TypePsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GenericStepBreakdown_TypePsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GenericStepBreakdown::InitAsDefaultInstance() {
}
class GenericStepBreakdown::_Internal {
 public:
};

GenericStepBreakdown::GenericStepBreakdown()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.GenericStepBreakdown)
}
GenericStepBreakdown::GenericStepBreakdown(const GenericStepBreakdown& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ps_.MergeFrom(from.type_ps_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.GenericStepBreakdown)
}

void GenericStepBreakdown::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GenericStepBreakdown_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base);
}

GenericStepBreakdown::~GenericStepBreakdown() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.GenericStepBreakdown)
  SharedDtor();
}

void GenericStepBreakdown::SharedDtor() {
}

void GenericStepBreakdown::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenericStepBreakdown& GenericStepBreakdown::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GenericStepBreakdown_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base);
  return *internal_default_instance();
}


void GenericStepBreakdown::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.GenericStepBreakdown)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ps_.Clear();
  _internal_metadata_.Clear();
}

const char* GenericStepBreakdown::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<int32, uint64> type_ps = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&type_ps_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenericStepBreakdown::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.GenericStepBreakdown)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, uint64> type_ps = 1;
  if (!this->_internal_type_ps().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::uint64 >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_type_ps().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_type_ps().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::uint64 >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::uint64 >::const_iterator
          it = this->_internal_type_ps().begin();
          it != this->_internal_type_ps().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GenericStepBreakdown_TypePsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::uint64 >::const_iterator
          it = this->_internal_type_ps().begin();
          it != this->_internal_type_ps().end(); ++it) {
        target = GenericStepBreakdown_TypePsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.GenericStepBreakdown)
  return target;
}

size_t GenericStepBreakdown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.GenericStepBreakdown)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, uint64> type_ps = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_type_ps_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::uint64 >::const_iterator
      it = this->_internal_type_ps().begin();
      it != this->_internal_type_ps().end(); ++it) {
    total_size += GenericStepBreakdown_TypePsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenericStepBreakdown::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.GenericStepBreakdown)
  GOOGLE_DCHECK_NE(&from, this);
  const GenericStepBreakdown* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenericStepBreakdown>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.GenericStepBreakdown)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.GenericStepBreakdown)
    MergeFrom(*source);
  }
}

void GenericStepBreakdown::MergeFrom(const GenericStepBreakdown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.GenericStepBreakdown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  type_ps_.MergeFrom(from.type_ps_);
}

void GenericStepBreakdown::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.GenericStepBreakdown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenericStepBreakdown::CopyFrom(const GenericStepBreakdown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.GenericStepBreakdown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenericStepBreakdown::IsInitialized() const {
  return true;
}

void GenericStepBreakdown::InternalSwap(GenericStepBreakdown* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  type_ps_.Swap(&other->type_ps_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GenericStepBreakdown::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StepInfoResult::InitAsDefaultInstance() {
  ::tensorflow::profiler::_StepInfoResult_default_instance_._instance.get_mutable()->step_breakdown_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
}
class StepInfoResult::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Any& step_breakdown(const StepInfoResult* msg);
};

const PROTOBUF_NAMESPACE_ID::Any&
StepInfoResult::_Internal::step_breakdown(const StepInfoResult* msg) {
  return *msg->step_breakdown_;
}
void StepInfoResult::clear_step_breakdown() {
  if (GetArenaNoVirtual() == nullptr && step_breakdown_ != nullptr) {
    delete step_breakdown_;
  }
  step_breakdown_ = nullptr;
}
StepInfoResult::StepInfoResult()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.StepInfoResult)
}
StepInfoResult::StepInfoResult(const StepInfoResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_step_breakdown()) {
    step_breakdown_ = new PROTOBUF_NAMESPACE_ID::Any(*from.step_breakdown_);
  } else {
    step_breakdown_ = nullptr;
  }
  ::memcpy(&duration_ps_, &from.duration_ps_,
    static_cast<size_t>(reinterpret_cast<char*>(&step_num_) -
    reinterpret_cast<char*>(&duration_ps_)) + sizeof(step_num_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.StepInfoResult)
}

void StepInfoResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StepInfoResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base);
  ::memset(&step_breakdown_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&step_num_) -
      reinterpret_cast<char*>(&step_breakdown_)) + sizeof(step_num_));
}

StepInfoResult::~StepInfoResult() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.StepInfoResult)
  SharedDtor();
}

void StepInfoResult::SharedDtor() {
  if (this != internal_default_instance()) delete step_breakdown_;
}

void StepInfoResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StepInfoResult& StepInfoResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StepInfoResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base);
  return *internal_default_instance();
}


void StepInfoResult::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.StepInfoResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && step_breakdown_ != nullptr) {
    delete step_breakdown_;
  }
  step_breakdown_ = nullptr;
  ::memset(&duration_ps_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&step_num_) -
      reinterpret_cast<char*>(&duration_ps_)) + sizeof(step_num_));
  _internal_metadata_.Clear();
}

const char* StepInfoResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 step_num = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          step_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 duration_ps = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          duration_ps_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 begin_ps = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          begin_ps_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Any step_breakdown = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_step_breakdown(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StepInfoResult::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.StepInfoResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 step_num = 1;
  if (this->step_num() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_step_num(), target);
  }

  // uint64 duration_ps = 2;
  if (this->duration_ps() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_duration_ps(), target);
  }

  // uint64 begin_ps = 3;
  if (this->begin_ps() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_begin_ps(), target);
  }

  // .google.protobuf.Any step_breakdown = 4;
  if (this->has_step_breakdown()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::step_breakdown(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.StepInfoResult)
  return target;
}

size_t StepInfoResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.StepInfoResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Any step_breakdown = 4;
  if (this->has_step_breakdown()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *step_breakdown_);
  }

  // uint64 duration_ps = 2;
  if (this->duration_ps() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_duration_ps());
  }

  // uint64 begin_ps = 3;
  if (this->begin_ps() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_begin_ps());
  }

  // uint32 step_num = 1;
  if (this->step_num() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_step_num());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StepInfoResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.StepInfoResult)
  GOOGLE_DCHECK_NE(&from, this);
  const StepInfoResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StepInfoResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.StepInfoResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.StepInfoResult)
    MergeFrom(*source);
  }
}

void StepInfoResult::MergeFrom(const StepInfoResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.StepInfoResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_step_breakdown()) {
    _internal_mutable_step_breakdown()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_step_breakdown());
  }
  if (from.duration_ps() != 0) {
    _internal_set_duration_ps(from._internal_duration_ps());
  }
  if (from.begin_ps() != 0) {
    _internal_set_begin_ps(from._internal_begin_ps());
  }
  if (from.step_num() != 0) {
    _internal_set_step_num(from._internal_step_num());
  }
}

void StepInfoResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.StepInfoResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StepInfoResult::CopyFrom(const StepInfoResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.StepInfoResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StepInfoResult::IsInitialized() const {
  return true;
}

void StepInfoResult::InternalSwap(StepInfoResult* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(step_breakdown_, other->step_breakdown_);
  swap(duration_ps_, other->duration_ps_);
  swap(begin_ps_, other->begin_ps_);
  swap(step_num_, other->step_num_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StepInfoResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FlowEventInfo::InitAsDefaultInstance() {
}
class FlowEventInfo::_Internal {
 public:
};

FlowEventInfo::FlowEventInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.FlowEventInfo)
}
FlowEventInfo::FlowEventInfo(const FlowEventInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  category_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_category().empty()) {
    category_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  ::memcpy(&flow_id_, &from.flow_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&replica_id_) -
    reinterpret_cast<char*>(&flow_id_)) + sizeof(replica_id_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.FlowEventInfo)
}

void FlowEventInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FlowEventInfo_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  category_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&flow_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&replica_id_) -
      reinterpret_cast<char*>(&flow_id_)) + sizeof(replica_id_));
}

FlowEventInfo::~FlowEventInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.FlowEventInfo)
  SharedDtor();
}

void FlowEventInfo::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  category_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FlowEventInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FlowEventInfo& FlowEventInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FlowEventInfo_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base);
  return *internal_default_instance();
}


void FlowEventInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.FlowEventInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  category_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&flow_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&replica_id_) -
      reinterpret_cast<char*>(&flow_id_)) + sizeof(replica_id_));
  _internal_metadata_.Clear();
}

const char* FlowEventInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 flow_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          flow_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 channel_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          channel_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_name(), ptr, ctx, "tensorflow.profiler.FlowEventInfo.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string category = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_category(), ptr, ctx, "tensorflow.profiler.FlowEventInfo.category");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 start_time_ps = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          start_time_ps_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 end_time_ps = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          end_time_ps_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 byte_size = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          byte_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 replica_id = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          replica_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FlowEventInfo::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.FlowEventInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 flow_id = 1;
  if (this->flow_id() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_flow_id(), target);
  }

  // int64 channel_id = 2;
  if (this->channel_id() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_channel_id(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.FlowEventInfo.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // string category = 4;
  if (this->category().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_category().data(), static_cast<int>(this->_internal_category().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.FlowEventInfo.category");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_category(), target);
  }

  // uint64 start_time_ps = 5;
  if (this->start_time_ps() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_start_time_ps(), target);
  }

  // uint64 end_time_ps = 6;
  if (this->end_time_ps() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(6, this->_internal_end_time_ps(), target);
  }

  // uint64 byte_size = 7;
  if (this->byte_size() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(7, this->_internal_byte_size(), target);
  }

  // uint32 replica_id = 8;
  if (this->replica_id() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_replica_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.FlowEventInfo)
  return target;
}

size_t FlowEventInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.FlowEventInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string category = 4;
  if (this->category().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_category());
  }

  // uint64 flow_id = 1;
  if (this->flow_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_flow_id());
  }

  // int64 channel_id = 2;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_channel_id());
  }

  // uint64 start_time_ps = 5;
  if (this->start_time_ps() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_start_time_ps());
  }

  // uint64 end_time_ps = 6;
  if (this->end_time_ps() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_end_time_ps());
  }

  // uint64 byte_size = 7;
  if (this->byte_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_byte_size());
  }

  // uint32 replica_id = 8;
  if (this->replica_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_replica_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FlowEventInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.FlowEventInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const FlowEventInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FlowEventInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.FlowEventInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.FlowEventInfo)
    MergeFrom(*source);
  }
}

void FlowEventInfo::MergeFrom(const FlowEventInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.FlowEventInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.category().size() > 0) {

    category_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  if (from.flow_id() != 0) {
    _internal_set_flow_id(from._internal_flow_id());
  }
  if (from.channel_id() != 0) {
    _internal_set_channel_id(from._internal_channel_id());
  }
  if (from.start_time_ps() != 0) {
    _internal_set_start_time_ps(from._internal_start_time_ps());
  }
  if (from.end_time_ps() != 0) {
    _internal_set_end_time_ps(from._internal_end_time_ps());
  }
  if (from.byte_size() != 0) {
    _internal_set_byte_size(from._internal_byte_size());
  }
  if (from.replica_id() != 0) {
    _internal_set_replica_id(from._internal_replica_id());
  }
}

void FlowEventInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.FlowEventInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FlowEventInfo::CopyFrom(const FlowEventInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.FlowEventInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FlowEventInfo::IsInitialized() const {
  return true;
}

void FlowEventInfo::InternalSwap(FlowEventInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  category_.Swap(&other->category_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(flow_id_, other->flow_id_);
  swap(channel_id_, other->channel_id_);
  swap(start_time_ps_, other->start_time_ps_);
  swap(end_time_ps_, other->end_time_ps_);
  swap(byte_size_, other->byte_size_);
  swap(replica_id_, other->replica_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FlowEventInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FlowDbResult::InitAsDefaultInstance() {
}
class FlowDbResult::_Internal {
 public:
};

FlowDbResult::FlowDbResult()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.FlowDbResult)
}
FlowDbResult::FlowDbResult(const FlowDbResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      flow_info_(from.flow_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.FlowDbResult)
}

void FlowDbResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FlowDbResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base);
}

FlowDbResult::~FlowDbResult() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.FlowDbResult)
  SharedDtor();
}

void FlowDbResult::SharedDtor() {
}

void FlowDbResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FlowDbResult& FlowDbResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FlowDbResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base);
  return *internal_default_instance();
}


void FlowDbResult::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.FlowDbResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  flow_info_.Clear();
  _internal_metadata_.Clear();
}

const char* FlowDbResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .tensorflow.profiler.FlowEventInfo flow_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_flow_info(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FlowDbResult::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.FlowDbResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.profiler.FlowEventInfo flow_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_flow_info_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(1, this->_internal_flow_info(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.FlowDbResult)
  return target;
}

size_t FlowDbResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.FlowDbResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tensorflow.profiler.FlowEventInfo flow_info = 1;
  total_size += 1UL * this->_internal_flow_info_size();
  for (const auto& msg : this->flow_info_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FlowDbResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.FlowDbResult)
  GOOGLE_DCHECK_NE(&from, this);
  const FlowDbResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FlowDbResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.FlowDbResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.FlowDbResult)
    MergeFrom(*source);
  }
}

void FlowDbResult::MergeFrom(const FlowDbResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.FlowDbResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  flow_info_.MergeFrom(from.flow_info_);
}

void FlowDbResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.FlowDbResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FlowDbResult::CopyFrom(const FlowDbResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.FlowDbResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FlowDbResult::IsInitialized() const {
  return true;
}

void FlowDbResult::InternalSwap(FlowDbResult* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  flow_info_.InternalSwap(&other->flow_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FlowDbResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AllReduceInfo::InitAsDefaultInstance() {
}
class AllReduceInfo::_Internal {
 public:
};

AllReduceInfo::AllReduceInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.AllReduceInfo)
}
AllReduceInfo::AllReduceInfo(const AllReduceInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&byte_size_) -
    reinterpret_cast<char*>(&id_)) + sizeof(byte_size_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.AllReduceInfo)
}

void AllReduceInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AllReduceInfo_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&byte_size_) -
      reinterpret_cast<char*>(&id_)) + sizeof(byte_size_));
}

AllReduceInfo::~AllReduceInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.AllReduceInfo)
  SharedDtor();
}

void AllReduceInfo::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AllReduceInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AllReduceInfo& AllReduceInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AllReduceInfo_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base);
  return *internal_default_instance();
}


void AllReduceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.AllReduceInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&byte_size_) -
      reinterpret_cast<char*>(&id_)) + sizeof(byte_size_));
  _internal_metadata_.Clear();
}

const char* AllReduceInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_name(), ptr, ctx, "tensorflow.profiler.AllReduceInfo.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 all_reduce_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          all_reduce_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 start_time_ps = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          start_time_ps_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 end_time_ps = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          end_time_ps_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 byte_size = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          byte_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AllReduceInfo::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.AllReduceInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.profiler.AllReduceInfo.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // uint64 all_reduce_id = 3;
  if (this->all_reduce_id() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_all_reduce_id(), target);
  }

  // uint64 start_time_ps = 4;
  if (this->start_time_ps() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_start_time_ps(), target);
  }

  // uint64 end_time_ps = 5;
  if (this->end_time_ps() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_end_time_ps(), target);
  }

  // uint64 byte_size = 6;
  if (this->byte_size() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(6, this->_internal_byte_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.AllReduceInfo)
  return target;
}

size_t AllReduceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.AllReduceInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_id());
  }

  // uint64 all_reduce_id = 3;
  if (this->all_reduce_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_all_reduce_id());
  }

  // uint64 start_time_ps = 4;
  if (this->start_time_ps() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_start_time_ps());
  }

  // uint64 end_time_ps = 5;
  if (this->end_time_ps() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_end_time_ps());
  }

  // uint64 byte_size = 6;
  if (this->byte_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_byte_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AllReduceInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.AllReduceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AllReduceInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AllReduceInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.AllReduceInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.AllReduceInfo)
    MergeFrom(*source);
  }
}

void AllReduceInfo::MergeFrom(const AllReduceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.AllReduceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.all_reduce_id() != 0) {
    _internal_set_all_reduce_id(from._internal_all_reduce_id());
  }
  if (from.start_time_ps() != 0) {
    _internal_set_start_time_ps(from._internal_start_time_ps());
  }
  if (from.end_time_ps() != 0) {
    _internal_set_end_time_ps(from._internal_end_time_ps());
  }
  if (from.byte_size() != 0) {
    _internal_set_byte_size(from._internal_byte_size());
  }
}

void AllReduceInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.AllReduceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllReduceInfo::CopyFrom(const AllReduceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.AllReduceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllReduceInfo::IsInitialized() const {
  return true;
}

void AllReduceInfo::InternalSwap(AllReduceInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(all_reduce_id_, other->all_reduce_id_);
  swap(start_time_ps_, other->start_time_ps_);
  swap(end_time_ps_, other->end_time_ps_);
  swap(byte_size_, other->byte_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AllReduceInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AllReduceDbResult::InitAsDefaultInstance() {
}
class AllReduceDbResult::_Internal {
 public:
};

AllReduceDbResult::AllReduceDbResult()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.AllReduceDbResult)
}
AllReduceDbResult::AllReduceDbResult(const AllReduceDbResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      all_reduce_info_(from.all_reduce_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.AllReduceDbResult)
}

void AllReduceDbResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AllReduceDbResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base);
}

AllReduceDbResult::~AllReduceDbResult() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.AllReduceDbResult)
  SharedDtor();
}

void AllReduceDbResult::SharedDtor() {
}

void AllReduceDbResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AllReduceDbResult& AllReduceDbResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AllReduceDbResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base);
  return *internal_default_instance();
}


void AllReduceDbResult::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.AllReduceDbResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  all_reduce_info_.Clear();
  _internal_metadata_.Clear();
}

const char* AllReduceDbResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .tensorflow.profiler.AllReduceInfo all_reduce_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_all_reduce_info(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AllReduceDbResult::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.AllReduceDbResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.profiler.AllReduceInfo all_reduce_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_all_reduce_info_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(1, this->_internal_all_reduce_info(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.AllReduceDbResult)
  return target;
}

size_t AllReduceDbResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.AllReduceDbResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tensorflow.profiler.AllReduceInfo all_reduce_info = 1;
  total_size += 1UL * this->_internal_all_reduce_info_size();
  for (const auto& msg : this->all_reduce_info_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AllReduceDbResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.AllReduceDbResult)
  GOOGLE_DCHECK_NE(&from, this);
  const AllReduceDbResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AllReduceDbResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.AllReduceDbResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.AllReduceDbResult)
    MergeFrom(*source);
  }
}

void AllReduceDbResult::MergeFrom(const AllReduceDbResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.AllReduceDbResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  all_reduce_info_.MergeFrom(from.all_reduce_info_);
}

void AllReduceDbResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.AllReduceDbResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllReduceDbResult::CopyFrom(const AllReduceDbResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.AllReduceDbResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllReduceDbResult::IsInitialized() const {
  return true;
}

void AllReduceDbResult::InternalSwap(AllReduceDbResult* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  all_reduce_info_.InternalSwap(&other->all_reduce_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AllReduceDbResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse::PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse() {}
PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse::PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse::MergeFrom(const PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse::PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse() {}
PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse::PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse::MergeFrom(const PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse::PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse() {}
PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse::PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse::MergeFrom(const PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse::PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse() {}
PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse::PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse::MergeFrom(const PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void PerCoreStepInfo::InitAsDefaultInstance() {
  ::tensorflow::profiler::_PerCoreStepInfo_default_instance_._instance.get_mutable()->hlo_metrics_db_ = const_cast< ::tensorflow::profiler::OpMetricsDb*>(
      ::tensorflow::profiler::OpMetricsDb::internal_default_instance());
}
class PerCoreStepInfo::_Internal {
 public:
  static const ::tensorflow::profiler::OpMetricsDb& hlo_metrics_db(const PerCoreStepInfo* msg);
};

const ::tensorflow::profiler::OpMetricsDb&
PerCoreStepInfo::_Internal::hlo_metrics_db(const PerCoreStepInfo* msg) {
  return *msg->hlo_metrics_db_;
}
void PerCoreStepInfo::clear_hlo_metrics_db() {
  if (GetArenaNoVirtual() == nullptr && hlo_metrics_db_ != nullptr) {
    delete hlo_metrics_db_;
  }
  hlo_metrics_db_ = nullptr;
}
PerCoreStepInfo::PerCoreStepInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.PerCoreStepInfo)
}
PerCoreStepInfo::PerCoreStepInfo(const PerCoreStepInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  step_info_per_core_.MergeFrom(from.step_info_per_core_);
  flow_db_per_core_.MergeFrom(from.flow_db_per_core_);
  core_id_to_replica_id_map_.MergeFrom(from.core_id_to_replica_id_map_);
  all_reduce_db_per_core_.MergeFrom(from.all_reduce_db_per_core_);
  if (from._internal_has_hlo_metrics_db()) {
    hlo_metrics_db_ = new ::tensorflow::profiler::OpMetricsDb(*from.hlo_metrics_db_);
  } else {
    hlo_metrics_db_ = nullptr;
  }
  step_num_ = from.step_num_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.PerCoreStepInfo)
}

void PerCoreStepInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PerCoreStepInfo_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base);
  ::memset(&hlo_metrics_db_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&step_num_) -
      reinterpret_cast<char*>(&hlo_metrics_db_)) + sizeof(step_num_));
}

PerCoreStepInfo::~PerCoreStepInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.PerCoreStepInfo)
  SharedDtor();
}

void PerCoreStepInfo::SharedDtor() {
  if (this != internal_default_instance()) delete hlo_metrics_db_;
}

void PerCoreStepInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PerCoreStepInfo& PerCoreStepInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PerCoreStepInfo_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base);
  return *internal_default_instance();
}


void PerCoreStepInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.PerCoreStepInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  step_info_per_core_.Clear();
  flow_db_per_core_.Clear();
  core_id_to_replica_id_map_.Clear();
  all_reduce_db_per_core_.Clear();
  if (GetArenaNoVirtual() == nullptr && hlo_metrics_db_ != nullptr) {
    delete hlo_metrics_db_;
  }
  hlo_metrics_db_ = nullptr;
  step_num_ = 0u;
  _internal_metadata_.Clear();
}

const char* PerCoreStepInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 step_num = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          step_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<uint32, .tensorflow.profiler.StepInfoResult> step_info_per_core = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&step_info_per_core_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // .tensorflow.profiler.OpMetricsDb hlo_metrics_db = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_hlo_metrics_db(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<uint32, .tensorflow.profiler.FlowDbResult> flow_db_per_core = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&flow_db_per_core_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // map<uint32, uint32> core_id_to_replica_id_map = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&core_id_to_replica_id_map_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // map<uint32, .tensorflow.profiler.AllReduceDbResult> all_reduce_db_per_core = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&all_reduce_db_per_core_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PerCoreStepInfo::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.PerCoreStepInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 step_num = 1;
  if (this->step_num() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_step_num(), target);
  }

  // map<uint32, .tensorflow.profiler.StepInfoResult> step_info_per_core = 2;
  if (!this->_internal_step_info_per_core().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::tensorflow::profiler::StepInfoResult >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_step_info_per_core().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_step_info_per_core().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::tensorflow::profiler::StepInfoResult >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::tensorflow::profiler::StepInfoResult >::const_iterator
          it = this->_internal_step_info_per_core().begin();
          it != this->_internal_step_info_per_core().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::tensorflow::profiler::StepInfoResult >::const_iterator
          it = this->_internal_step_info_per_core().begin();
          it != this->_internal_step_info_per_core().end(); ++it) {
        target = PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
      }
    }
  }

  // .tensorflow.profiler.OpMetricsDb hlo_metrics_db = 3;
  if (this->has_hlo_metrics_db()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::hlo_metrics_db(this), target, stream);
  }

  // map<uint32, .tensorflow.profiler.FlowDbResult> flow_db_per_core = 4;
  if (!this->_internal_flow_db_per_core().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::tensorflow::profiler::FlowDbResult >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_flow_db_per_core().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_flow_db_per_core().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::tensorflow::profiler::FlowDbResult >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::tensorflow::profiler::FlowDbResult >::const_iterator
          it = this->_internal_flow_db_per_core().begin();
          it != this->_internal_flow_db_per_core().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::tensorflow::profiler::FlowDbResult >::const_iterator
          it = this->_internal_flow_db_per_core().begin();
          it != this->_internal_flow_db_per_core().end(); ++it) {
        target = PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, uint32> core_id_to_replica_id_map = 5;
  if (!this->_internal_core_id_to_replica_id_map().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_core_id_to_replica_id_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_core_id_to_replica_id_map().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_iterator
          it = this->_internal_core_id_to_replica_id_map().begin();
          it != this->_internal_core_id_to_replica_id_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse::Funcs::InternalSerialize(5, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_iterator
          it = this->_internal_core_id_to_replica_id_map().begin();
          it != this->_internal_core_id_to_replica_id_map().end(); ++it) {
        target = PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse::Funcs::InternalSerialize(5, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .tensorflow.profiler.AllReduceDbResult> all_reduce_db_per_core = 6;
  if (!this->_internal_all_reduce_db_per_core().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::tensorflow::profiler::AllReduceDbResult >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_all_reduce_db_per_core().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_all_reduce_db_per_core().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::tensorflow::profiler::AllReduceDbResult >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::tensorflow::profiler::AllReduceDbResult >::const_iterator
          it = this->_internal_all_reduce_db_per_core().begin();
          it != this->_internal_all_reduce_db_per_core().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse::Funcs::InternalSerialize(6, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::tensorflow::profiler::AllReduceDbResult >::const_iterator
          it = this->_internal_all_reduce_db_per_core().begin();
          it != this->_internal_all_reduce_db_per_core().end(); ++it) {
        target = PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse::Funcs::InternalSerialize(6, it->first, it->second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.PerCoreStepInfo)
  return target;
}

size_t PerCoreStepInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.PerCoreStepInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint32, .tensorflow.profiler.StepInfoResult> step_info_per_core = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_step_info_per_core_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::tensorflow::profiler::StepInfoResult >::const_iterator
      it = this->_internal_step_info_per_core().begin();
      it != this->_internal_step_info_per_core().end(); ++it) {
    total_size += PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .tensorflow.profiler.FlowDbResult> flow_db_per_core = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_flow_db_per_core_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::tensorflow::profiler::FlowDbResult >::const_iterator
      it = this->_internal_flow_db_per_core().begin();
      it != this->_internal_flow_db_per_core().end(); ++it) {
    total_size += PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, uint32> core_id_to_replica_id_map = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_core_id_to_replica_id_map_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_iterator
      it = this->_internal_core_id_to_replica_id_map().begin();
      it != this->_internal_core_id_to_replica_id_map().end(); ++it) {
    total_size += PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .tensorflow.profiler.AllReduceDbResult> all_reduce_db_per_core = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_all_reduce_db_per_core_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::tensorflow::profiler::AllReduceDbResult >::const_iterator
      it = this->_internal_all_reduce_db_per_core().begin();
      it != this->_internal_all_reduce_db_per_core().end(); ++it) {
    total_size += PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .tensorflow.profiler.OpMetricsDb hlo_metrics_db = 3;
  if (this->has_hlo_metrics_db()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *hlo_metrics_db_);
  }

  // uint32 step_num = 1;
  if (this->step_num() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_step_num());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PerCoreStepInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.PerCoreStepInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PerCoreStepInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PerCoreStepInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.PerCoreStepInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.PerCoreStepInfo)
    MergeFrom(*source);
  }
}

void PerCoreStepInfo::MergeFrom(const PerCoreStepInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.PerCoreStepInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  step_info_per_core_.MergeFrom(from.step_info_per_core_);
  flow_db_per_core_.MergeFrom(from.flow_db_per_core_);
  core_id_to_replica_id_map_.MergeFrom(from.core_id_to_replica_id_map_);
  all_reduce_db_per_core_.MergeFrom(from.all_reduce_db_per_core_);
  if (from.has_hlo_metrics_db()) {
    _internal_mutable_hlo_metrics_db()->::tensorflow::profiler::OpMetricsDb::MergeFrom(from._internal_hlo_metrics_db());
  }
  if (from.step_num() != 0) {
    _internal_set_step_num(from._internal_step_num());
  }
}

void PerCoreStepInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.PerCoreStepInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PerCoreStepInfo::CopyFrom(const PerCoreStepInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.PerCoreStepInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerCoreStepInfo::IsInitialized() const {
  return true;
}

void PerCoreStepInfo::InternalSwap(PerCoreStepInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  step_info_per_core_.Swap(&other->step_info_per_core_);
  flow_db_per_core_.Swap(&other->flow_db_per_core_);
  core_id_to_replica_id_map_.Swap(&other->core_id_to_replica_id_map_);
  all_reduce_db_per_core_.Swap(&other->all_reduce_db_per_core_);
  swap(hlo_metrics_db_, other->hlo_metrics_db_);
  swap(step_num_, other->step_num_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PerCoreStepInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StepDatabaseResult::InitAsDefaultInstance() {
}
class StepDatabaseResult::_Internal {
 public:
};

StepDatabaseResult::StepDatabaseResult()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.profiler.StepDatabaseResult)
}
StepDatabaseResult::StepDatabaseResult(const StepDatabaseResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      step_sequence_(from.step_sequence_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.profiler.StepDatabaseResult)
}

void StepDatabaseResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StepDatabaseResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base);
}

StepDatabaseResult::~StepDatabaseResult() {
  // @@protoc_insertion_point(destructor:tensorflow.profiler.StepDatabaseResult)
  SharedDtor();
}

void StepDatabaseResult::SharedDtor() {
}

void StepDatabaseResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StepDatabaseResult& StepDatabaseResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StepDatabaseResult_tensorflow_2fcore_2fprofiler_2fprotobuf_2fsteps_5fdb_2eproto.base);
  return *internal_default_instance();
}


void StepDatabaseResult::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.profiler.StepDatabaseResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  step_sequence_.Clear();
  _internal_metadata_.Clear();
}

const char* StepDatabaseResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .tensorflow.profiler.PerCoreStepInfo step_sequence = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_step_sequence(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StepDatabaseResult::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.profiler.StepDatabaseResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.profiler.PerCoreStepInfo step_sequence = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_step_sequence_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(1, this->_internal_step_sequence(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.profiler.StepDatabaseResult)
  return target;
}

size_t StepDatabaseResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.profiler.StepDatabaseResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tensorflow.profiler.PerCoreStepInfo step_sequence = 1;
  total_size += 1UL * this->_internal_step_sequence_size();
  for (const auto& msg : this->step_sequence_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StepDatabaseResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.profiler.StepDatabaseResult)
  GOOGLE_DCHECK_NE(&from, this);
  const StepDatabaseResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StepDatabaseResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.profiler.StepDatabaseResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.profiler.StepDatabaseResult)
    MergeFrom(*source);
  }
}

void StepDatabaseResult::MergeFrom(const StepDatabaseResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.profiler.StepDatabaseResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  step_sequence_.MergeFrom(from.step_sequence_);
}

void StepDatabaseResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.profiler.StepDatabaseResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StepDatabaseResult::CopyFrom(const StepDatabaseResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.profiler.StepDatabaseResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StepDatabaseResult::IsInitialized() const {
  return true;
}

void StepDatabaseResult::InternalSwap(StepDatabaseResult* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  step_sequence_.InternalSwap(&other->step_sequence_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StepDatabaseResult::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace profiler
}  // namespace tensorflow
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tensorflow::profiler::GenericStepBreakdown_TypePsEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::profiler::GenericStepBreakdown_TypePsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::GenericStepBreakdown_TypePsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::profiler::GenericStepBreakdown* Arena::CreateMaybeMessage< ::tensorflow::profiler::GenericStepBreakdown >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::GenericStepBreakdown >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::profiler::StepInfoResult* Arena::CreateMaybeMessage< ::tensorflow::profiler::StepInfoResult >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::StepInfoResult >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::profiler::FlowEventInfo* Arena::CreateMaybeMessage< ::tensorflow::profiler::FlowEventInfo >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::FlowEventInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::profiler::FlowDbResult* Arena::CreateMaybeMessage< ::tensorflow::profiler::FlowDbResult >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::FlowDbResult >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::profiler::AllReduceInfo* Arena::CreateMaybeMessage< ::tensorflow::profiler::AllReduceInfo >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::AllReduceInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::profiler::AllReduceDbResult* Arena::CreateMaybeMessage< ::tensorflow::profiler::AllReduceDbResult >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::AllReduceDbResult >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::profiler::PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::profiler::PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::PerCoreStepInfo_StepInfoPerCoreEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::profiler::PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::profiler::PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::PerCoreStepInfo_FlowDbPerCoreEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::profiler::PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::profiler::PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::PerCoreStepInfo_CoreIdToReplicaIdMapEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::profiler::PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::profiler::PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::PerCoreStepInfo_AllReduceDbPerCoreEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::profiler::PerCoreStepInfo* Arena::CreateMaybeMessage< ::tensorflow::profiler::PerCoreStepInfo >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::PerCoreStepInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::profiler::StepDatabaseResult* Arena::CreateMaybeMessage< ::tensorflow::profiler::StepDatabaseResult >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::profiler::StepDatabaseResult >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
