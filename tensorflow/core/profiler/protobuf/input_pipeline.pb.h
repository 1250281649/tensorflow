// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/profiler/protobuf/input_pipeline.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3010000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3010001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include "tensorflow/core/profiler/protobuf/hardware_types.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[7]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto;
namespace tensorflow {
namespace profiler {
class GenericStepTimeBreakdown;
class GenericStepTimeBreakdownDefaultTypeInternal;
extern GenericStepTimeBreakdownDefaultTypeInternal _GenericStepTimeBreakdown_default_instance_;
class InputOpDetails;
class InputOpDetailsDefaultTypeInternal;
extern InputOpDetailsDefaultTypeInternal _InputOpDetails_default_instance_;
class InputPipelineAnalysisRecommendation;
class InputPipelineAnalysisRecommendationDefaultTypeInternal;
extern InputPipelineAnalysisRecommendationDefaultTypeInternal _InputPipelineAnalysisRecommendation_default_instance_;
class InputPipelineAnalysisResult;
class InputPipelineAnalysisResultDefaultTypeInternal;
extern InputPipelineAnalysisResultDefaultTypeInternal _InputPipelineAnalysisResult_default_instance_;
class InputTimeBreakdown;
class InputTimeBreakdownDefaultTypeInternal;
extern InputTimeBreakdownDefaultTypeInternal _InputTimeBreakdown_default_instance_;
class PerGenericStepDetails;
class PerGenericStepDetailsDefaultTypeInternal;
extern PerGenericStepDetailsDefaultTypeInternal _PerGenericStepDetails_default_instance_;
class StepSummary;
class StepSummaryDefaultTypeInternal;
extern StepSummaryDefaultTypeInternal _StepSummary_default_instance_;
}  // namespace profiler
}  // namespace tensorflow
PROTOBUF_NAMESPACE_OPEN
template<> ::tensorflow::profiler::GenericStepTimeBreakdown* Arena::CreateMaybeMessage<::tensorflow::profiler::GenericStepTimeBreakdown>(Arena*);
template<> ::tensorflow::profiler::InputOpDetails* Arena::CreateMaybeMessage<::tensorflow::profiler::InputOpDetails>(Arena*);
template<> ::tensorflow::profiler::InputPipelineAnalysisRecommendation* Arena::CreateMaybeMessage<::tensorflow::profiler::InputPipelineAnalysisRecommendation>(Arena*);
template<> ::tensorflow::profiler::InputPipelineAnalysisResult* Arena::CreateMaybeMessage<::tensorflow::profiler::InputPipelineAnalysisResult>(Arena*);
template<> ::tensorflow::profiler::InputTimeBreakdown* Arena::CreateMaybeMessage<::tensorflow::profiler::InputTimeBreakdown>(Arena*);
template<> ::tensorflow::profiler::PerGenericStepDetails* Arena::CreateMaybeMessage<::tensorflow::profiler::PerGenericStepDetails>(Arena*);
template<> ::tensorflow::profiler::StepSummary* Arena::CreateMaybeMessage<::tensorflow::profiler::StepSummary>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace tensorflow {
namespace profiler {

// ===================================================================

class StepSummary :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.StepSummary) */ {
 public:
  StepSummary();
  virtual ~StepSummary();

  StepSummary(const StepSummary& from);
  StepSummary(StepSummary&& from) noexcept
    : StepSummary() {
    *this = ::std::move(from);
  }

  inline StepSummary& operator=(const StepSummary& from) {
    CopyFrom(from);
    return *this;
  }
  inline StepSummary& operator=(StepSummary&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StepSummary& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StepSummary* internal_default_instance() {
    return reinterpret_cast<const StepSummary*>(
               &_StepSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(StepSummary& a, StepSummary& b) {
    a.Swap(&b);
  }
  inline void Swap(StepSummary* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StepSummary* New() const final {
    return CreateMaybeMessage<StepSummary>(nullptr);
  }

  StepSummary* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StepSummary>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StepSummary& from);
  void MergeFrom(const StepSummary& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StepSummary* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tensorflow.profiler.StepSummary";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto);
    return ::descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAverageFieldNumber = 1,
    kStandardDeviationFieldNumber = 2,
    kMinimumFieldNumber = 3,
    kMaximumFieldNumber = 4,
  };
  // double average = 1;
  void clear_average();
  double average() const;
  void set_average(double value);
  private:
  double _internal_average() const;
  void _internal_set_average(double value);
  public:

  // double standard_deviation = 2;
  void clear_standard_deviation();
  double standard_deviation() const;
  void set_standard_deviation(double value);
  private:
  double _internal_standard_deviation() const;
  void _internal_set_standard_deviation(double value);
  public:

  // double minimum = 3;
  void clear_minimum();
  double minimum() const;
  void set_minimum(double value);
  private:
  double _internal_minimum() const;
  void _internal_set_minimum(double value);
  public:

  // double maximum = 4;
  void clear_maximum();
  double maximum() const;
  void set_maximum(double value);
  private:
  double _internal_maximum() const;
  void _internal_set_maximum(double value);
  public:

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.StepSummary)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  double average_;
  double standard_deviation_;
  double minimum_;
  double maximum_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto;
};
// -------------------------------------------------------------------

class PerGenericStepDetails :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.PerGenericStepDetails) */ {
 public:
  PerGenericStepDetails();
  virtual ~PerGenericStepDetails();

  PerGenericStepDetails(const PerGenericStepDetails& from);
  PerGenericStepDetails(PerGenericStepDetails&& from) noexcept
    : PerGenericStepDetails() {
    *this = ::std::move(from);
  }

  inline PerGenericStepDetails& operator=(const PerGenericStepDetails& from) {
    CopyFrom(from);
    return *this;
  }
  inline PerGenericStepDetails& operator=(PerGenericStepDetails&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PerGenericStepDetails& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PerGenericStepDetails* internal_default_instance() {
    return reinterpret_cast<const PerGenericStepDetails*>(
               &_PerGenericStepDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PerGenericStepDetails& a, PerGenericStepDetails& b) {
    a.Swap(&b);
  }
  inline void Swap(PerGenericStepDetails* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PerGenericStepDetails* New() const final {
    return CreateMaybeMessage<PerGenericStepDetails>(nullptr);
  }

  PerGenericStepDetails* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PerGenericStepDetails>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PerGenericStepDetails& from);
  void MergeFrom(const PerGenericStepDetails& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PerGenericStepDetails* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tensorflow.profiler.PerGenericStepDetails";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto);
    return ::descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStepTimeMsFieldNumber = 2,
    kUnknownTimeMsFieldNumber = 3,
    kInfeedMsFieldNumber = 4,
    kOutfeedMsFieldNumber = 5,
    kDeviceComputeMsFieldNumber = 6,
    kDeviceToDeviceMsFieldNumber = 7,
    kHostComputeMsFieldNumber = 8,
    kHostPrepareMsFieldNumber = 9,
    kHostCompileMsFieldNumber = 10,
    kStepNumberFieldNumber = 1,
  };
  // double step_time_ms = 2;
  void clear_step_time_ms();
  double step_time_ms() const;
  void set_step_time_ms(double value);
  private:
  double _internal_step_time_ms() const;
  void _internal_set_step_time_ms(double value);
  public:

  // double unknown_time_ms = 3;
  void clear_unknown_time_ms();
  double unknown_time_ms() const;
  void set_unknown_time_ms(double value);
  private:
  double _internal_unknown_time_ms() const;
  void _internal_set_unknown_time_ms(double value);
  public:

  // double infeed_ms = 4;
  void clear_infeed_ms();
  double infeed_ms() const;
  void set_infeed_ms(double value);
  private:
  double _internal_infeed_ms() const;
  void _internal_set_infeed_ms(double value);
  public:

  // double outfeed_ms = 5;
  void clear_outfeed_ms();
  double outfeed_ms() const;
  void set_outfeed_ms(double value);
  private:
  double _internal_outfeed_ms() const;
  void _internal_set_outfeed_ms(double value);
  public:

  // double device_compute_ms = 6;
  void clear_device_compute_ms();
  double device_compute_ms() const;
  void set_device_compute_ms(double value);
  private:
  double _internal_device_compute_ms() const;
  void _internal_set_device_compute_ms(double value);
  public:

  // double device_to_device_ms = 7;
  void clear_device_to_device_ms();
  double device_to_device_ms() const;
  void set_device_to_device_ms(double value);
  private:
  double _internal_device_to_device_ms() const;
  void _internal_set_device_to_device_ms(double value);
  public:

  // double host_compute_ms = 8;
  void clear_host_compute_ms();
  double host_compute_ms() const;
  void set_host_compute_ms(double value);
  private:
  double _internal_host_compute_ms() const;
  void _internal_set_host_compute_ms(double value);
  public:

  // double host_prepare_ms = 9;
  void clear_host_prepare_ms();
  double host_prepare_ms() const;
  void set_host_prepare_ms(double value);
  private:
  double _internal_host_prepare_ms() const;
  void _internal_set_host_prepare_ms(double value);
  public:

  // double host_compile_ms = 10;
  void clear_host_compile_ms();
  double host_compile_ms() const;
  void set_host_compile_ms(double value);
  private:
  double _internal_host_compile_ms() const;
  void _internal_set_host_compile_ms(double value);
  public:

  // int32 step_number = 1;
  void clear_step_number();
  ::PROTOBUF_NAMESPACE_ID::int32 step_number() const;
  void set_step_number(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_step_number() const;
  void _internal_set_step_number(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.PerGenericStepDetails)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  double step_time_ms_;
  double unknown_time_ms_;
  double infeed_ms_;
  double outfeed_ms_;
  double device_compute_ms_;
  double device_to_device_ms_;
  double host_compute_ms_;
  double host_prepare_ms_;
  double host_compile_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 step_number_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto;
};
// -------------------------------------------------------------------

class InputTimeBreakdown :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.InputTimeBreakdown) */ {
 public:
  InputTimeBreakdown();
  virtual ~InputTimeBreakdown();

  InputTimeBreakdown(const InputTimeBreakdown& from);
  InputTimeBreakdown(InputTimeBreakdown&& from) noexcept
    : InputTimeBreakdown() {
    *this = ::std::move(from);
  }

  inline InputTimeBreakdown& operator=(const InputTimeBreakdown& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputTimeBreakdown& operator=(InputTimeBreakdown&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InputTimeBreakdown& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputTimeBreakdown* internal_default_instance() {
    return reinterpret_cast<const InputTimeBreakdown*>(
               &_InputTimeBreakdown_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(InputTimeBreakdown& a, InputTimeBreakdown& b) {
    a.Swap(&b);
  }
  inline void Swap(InputTimeBreakdown* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputTimeBreakdown* New() const final {
    return CreateMaybeMessage<InputTimeBreakdown>(nullptr);
  }

  InputTimeBreakdown* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputTimeBreakdown>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InputTimeBreakdown& from);
  void MergeFrom(const InputTimeBreakdown& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputTimeBreakdown* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tensorflow.profiler.InputTimeBreakdown";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto);
    return ::descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDemandedFileReadUsFieldNumber = 1,
    kAdvancedFileReadUsFieldNumber = 2,
    kPreprocessingUsFieldNumber = 3,
    kEnqueueUsFieldNumber = 4,
    kUnclassifiedNonEnqueueUsFieldNumber = 5,
  };
  // double demanded_file_read_us = 1;
  void clear_demanded_file_read_us();
  double demanded_file_read_us() const;
  void set_demanded_file_read_us(double value);
  private:
  double _internal_demanded_file_read_us() const;
  void _internal_set_demanded_file_read_us(double value);
  public:

  // double advanced_file_read_us = 2;
  void clear_advanced_file_read_us();
  double advanced_file_read_us() const;
  void set_advanced_file_read_us(double value);
  private:
  double _internal_advanced_file_read_us() const;
  void _internal_set_advanced_file_read_us(double value);
  public:

  // double preprocessing_us = 3;
  void clear_preprocessing_us();
  double preprocessing_us() const;
  void set_preprocessing_us(double value);
  private:
  double _internal_preprocessing_us() const;
  void _internal_set_preprocessing_us(double value);
  public:

  // double enqueue_us = 4;
  void clear_enqueue_us();
  double enqueue_us() const;
  void set_enqueue_us(double value);
  private:
  double _internal_enqueue_us() const;
  void _internal_set_enqueue_us(double value);
  public:

  // double unclassified_non_enqueue_us = 5;
  void clear_unclassified_non_enqueue_us();
  double unclassified_non_enqueue_us() const;
  void set_unclassified_non_enqueue_us(double value);
  private:
  double _internal_unclassified_non_enqueue_us() const;
  void _internal_set_unclassified_non_enqueue_us(double value);
  public:

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.InputTimeBreakdown)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  double demanded_file_read_us_;
  double advanced_file_read_us_;
  double preprocessing_us_;
  double enqueue_us_;
  double unclassified_non_enqueue_us_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto;
};
// -------------------------------------------------------------------

class InputOpDetails :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.InputOpDetails) */ {
 public:
  InputOpDetails();
  virtual ~InputOpDetails();

  InputOpDetails(const InputOpDetails& from);
  InputOpDetails(InputOpDetails&& from) noexcept
    : InputOpDetails() {
    *this = ::std::move(from);
  }

  inline InputOpDetails& operator=(const InputOpDetails& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputOpDetails& operator=(InputOpDetails&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InputOpDetails& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputOpDetails* internal_default_instance() {
    return reinterpret_cast<const InputOpDetails*>(
               &_InputOpDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(InputOpDetails& a, InputOpDetails& b) {
    a.Swap(&b);
  }
  inline void Swap(InputOpDetails* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputOpDetails* New() const final {
    return CreateMaybeMessage<InputOpDetails>(nullptr);
  }

  InputOpDetails* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputOpDetails>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InputOpDetails& from);
  void MergeFrom(const InputOpDetails& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputOpDetails* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tensorflow.profiler.InputOpDetails";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto);
    return ::descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOpNameFieldNumber = 1,
    kCategoryFieldNumber = 7,
    kCountFieldNumber = 2,
    kTimeInMsFieldNumber = 3,
    kTimeInPercentFieldNumber = 4,
    kSelfTimeInMsFieldNumber = 5,
    kSelfTimeInPercentFieldNumber = 6,
  };
  // string op_name = 1;
  void clear_op_name();
  const std::string& op_name() const;
  void set_op_name(const std::string& value);
  void set_op_name(std::string&& value);
  void set_op_name(const char* value);
  void set_op_name(const char* value, size_t size);
  std::string* mutable_op_name();
  std::string* release_op_name();
  void set_allocated_op_name(std::string* op_name);
  private:
  const std::string& _internal_op_name() const;
  void _internal_set_op_name(const std::string& value);
  std::string* _internal_mutable_op_name();
  public:

  // string category = 7;
  void clear_category();
  const std::string& category() const;
  void set_category(const std::string& value);
  void set_category(std::string&& value);
  void set_category(const char* value);
  void set_category(const char* value, size_t size);
  std::string* mutable_category();
  std::string* release_category();
  void set_allocated_category(std::string* category);
  private:
  const std::string& _internal_category() const;
  void _internal_set_category(const std::string& value);
  std::string* _internal_mutable_category();
  public:

  // uint64 count = 2;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::uint64 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // double time_in_ms = 3;
  void clear_time_in_ms();
  double time_in_ms() const;
  void set_time_in_ms(double value);
  private:
  double _internal_time_in_ms() const;
  void _internal_set_time_in_ms(double value);
  public:

  // double time_in_percent = 4;
  void clear_time_in_percent();
  double time_in_percent() const;
  void set_time_in_percent(double value);
  private:
  double _internal_time_in_percent() const;
  void _internal_set_time_in_percent(double value);
  public:

  // double self_time_in_ms = 5;
  void clear_self_time_in_ms();
  double self_time_in_ms() const;
  void set_self_time_in_ms(double value);
  private:
  double _internal_self_time_in_ms() const;
  void _internal_set_self_time_in_ms(double value);
  public:

  // double self_time_in_percent = 6;
  void clear_self_time_in_percent();
  double self_time_in_percent() const;
  void set_self_time_in_percent(double value);
  private:
  double _internal_self_time_in_percent() const;
  void _internal_set_self_time_in_percent(double value);
  public:

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.InputOpDetails)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr op_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr category_;
  ::PROTOBUF_NAMESPACE_ID::uint64 count_;
  double time_in_ms_;
  double time_in_percent_;
  double self_time_in_ms_;
  double self_time_in_percent_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto;
};
// -------------------------------------------------------------------

class InputPipelineAnalysisRecommendation :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.InputPipelineAnalysisRecommendation) */ {
 public:
  InputPipelineAnalysisRecommendation();
  virtual ~InputPipelineAnalysisRecommendation();

  InputPipelineAnalysisRecommendation(const InputPipelineAnalysisRecommendation& from);
  InputPipelineAnalysisRecommendation(InputPipelineAnalysisRecommendation&& from) noexcept
    : InputPipelineAnalysisRecommendation() {
    *this = ::std::move(from);
  }

  inline InputPipelineAnalysisRecommendation& operator=(const InputPipelineAnalysisRecommendation& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputPipelineAnalysisRecommendation& operator=(InputPipelineAnalysisRecommendation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InputPipelineAnalysisRecommendation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputPipelineAnalysisRecommendation* internal_default_instance() {
    return reinterpret_cast<const InputPipelineAnalysisRecommendation*>(
               &_InputPipelineAnalysisRecommendation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(InputPipelineAnalysisRecommendation& a, InputPipelineAnalysisRecommendation& b) {
    a.Swap(&b);
  }
  inline void Swap(InputPipelineAnalysisRecommendation* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputPipelineAnalysisRecommendation* New() const final {
    return CreateMaybeMessage<InputPipelineAnalysisRecommendation>(nullptr);
  }

  InputPipelineAnalysisRecommendation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputPipelineAnalysisRecommendation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InputPipelineAnalysisRecommendation& from);
  void MergeFrom(const InputPipelineAnalysisRecommendation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputPipelineAnalysisRecommendation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tensorflow.profiler.InputPipelineAnalysisRecommendation";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto);
    return ::descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDetailsFieldNumber = 1,
  };
  // repeated string details = 1;
  int details_size() const;
  private:
  int _internal_details_size() const;
  public:
  void clear_details();
  const std::string& details(int index) const;
  std::string* mutable_details(int index);
  void set_details(int index, const std::string& value);
  void set_details(int index, std::string&& value);
  void set_details(int index, const char* value);
  void set_details(int index, const char* value, size_t size);
  std::string* add_details();
  void add_details(const std::string& value);
  void add_details(std::string&& value);
  void add_details(const char* value);
  void add_details(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& details() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_details();
  private:
  const std::string& _internal_details(int index) const;
  std::string* _internal_add_details();
  public:

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.InputPipelineAnalysisRecommendation)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> details_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto;
};
// -------------------------------------------------------------------

class GenericStepTimeBreakdown :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.GenericStepTimeBreakdown) */ {
 public:
  GenericStepTimeBreakdown();
  virtual ~GenericStepTimeBreakdown();

  GenericStepTimeBreakdown(const GenericStepTimeBreakdown& from);
  GenericStepTimeBreakdown(GenericStepTimeBreakdown&& from) noexcept
    : GenericStepTimeBreakdown() {
    *this = ::std::move(from);
  }

  inline GenericStepTimeBreakdown& operator=(const GenericStepTimeBreakdown& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenericStepTimeBreakdown& operator=(GenericStepTimeBreakdown&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenericStepTimeBreakdown& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GenericStepTimeBreakdown* internal_default_instance() {
    return reinterpret_cast<const GenericStepTimeBreakdown*>(
               &_GenericStepTimeBreakdown_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GenericStepTimeBreakdown& a, GenericStepTimeBreakdown& b) {
    a.Swap(&b);
  }
  inline void Swap(GenericStepTimeBreakdown* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenericStepTimeBreakdown* New() const final {
    return CreateMaybeMessage<GenericStepTimeBreakdown>(nullptr);
  }

  GenericStepTimeBreakdown* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenericStepTimeBreakdown>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenericStepTimeBreakdown& from);
  void MergeFrom(const GenericStepTimeBreakdown& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenericStepTimeBreakdown* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tensorflow.profiler.GenericStepTimeBreakdown";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto);
    return ::descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnknownTimeMsSummaryFieldNumber = 1,
    kInfeedMsSummaryFieldNumber = 2,
    kOutfeedMsSummaryFieldNumber = 3,
    kDeviceComputeMsSummaryFieldNumber = 4,
    kDeviceToDeviceMsSummaryFieldNumber = 5,
    kHostComputeMsSummaryFieldNumber = 6,
    kHostPrepareMsSummaryFieldNumber = 7,
    kHostCompileMsSummaryFieldNumber = 8,
  };
  // .tensorflow.profiler.StepSummary unknown_time_ms_summary = 1;
  bool has_unknown_time_ms_summary() const;
  private:
  bool _internal_has_unknown_time_ms_summary() const;
  public:
  void clear_unknown_time_ms_summary();
  const ::tensorflow::profiler::StepSummary& unknown_time_ms_summary() const;
  ::tensorflow::profiler::StepSummary* release_unknown_time_ms_summary();
  ::tensorflow::profiler::StepSummary* mutable_unknown_time_ms_summary();
  void set_allocated_unknown_time_ms_summary(::tensorflow::profiler::StepSummary* unknown_time_ms_summary);
  private:
  const ::tensorflow::profiler::StepSummary& _internal_unknown_time_ms_summary() const;
  ::tensorflow::profiler::StepSummary* _internal_mutable_unknown_time_ms_summary();
  public:

  // .tensorflow.profiler.StepSummary infeed_ms_summary = 2;
  bool has_infeed_ms_summary() const;
  private:
  bool _internal_has_infeed_ms_summary() const;
  public:
  void clear_infeed_ms_summary();
  const ::tensorflow::profiler::StepSummary& infeed_ms_summary() const;
  ::tensorflow::profiler::StepSummary* release_infeed_ms_summary();
  ::tensorflow::profiler::StepSummary* mutable_infeed_ms_summary();
  void set_allocated_infeed_ms_summary(::tensorflow::profiler::StepSummary* infeed_ms_summary);
  private:
  const ::tensorflow::profiler::StepSummary& _internal_infeed_ms_summary() const;
  ::tensorflow::profiler::StepSummary* _internal_mutable_infeed_ms_summary();
  public:

  // .tensorflow.profiler.StepSummary outfeed_ms_summary = 3;
  bool has_outfeed_ms_summary() const;
  private:
  bool _internal_has_outfeed_ms_summary() const;
  public:
  void clear_outfeed_ms_summary();
  const ::tensorflow::profiler::StepSummary& outfeed_ms_summary() const;
  ::tensorflow::profiler::StepSummary* release_outfeed_ms_summary();
  ::tensorflow::profiler::StepSummary* mutable_outfeed_ms_summary();
  void set_allocated_outfeed_ms_summary(::tensorflow::profiler::StepSummary* outfeed_ms_summary);
  private:
  const ::tensorflow::profiler::StepSummary& _internal_outfeed_ms_summary() const;
  ::tensorflow::profiler::StepSummary* _internal_mutable_outfeed_ms_summary();
  public:

  // .tensorflow.profiler.StepSummary device_compute_ms_summary = 4;
  bool has_device_compute_ms_summary() const;
  private:
  bool _internal_has_device_compute_ms_summary() const;
  public:
  void clear_device_compute_ms_summary();
  const ::tensorflow::profiler::StepSummary& device_compute_ms_summary() const;
  ::tensorflow::profiler::StepSummary* release_device_compute_ms_summary();
  ::tensorflow::profiler::StepSummary* mutable_device_compute_ms_summary();
  void set_allocated_device_compute_ms_summary(::tensorflow::profiler::StepSummary* device_compute_ms_summary);
  private:
  const ::tensorflow::profiler::StepSummary& _internal_device_compute_ms_summary() const;
  ::tensorflow::profiler::StepSummary* _internal_mutable_device_compute_ms_summary();
  public:

  // .tensorflow.profiler.StepSummary device_to_device_ms_summary = 5;
  bool has_device_to_device_ms_summary() const;
  private:
  bool _internal_has_device_to_device_ms_summary() const;
  public:
  void clear_device_to_device_ms_summary();
  const ::tensorflow::profiler::StepSummary& device_to_device_ms_summary() const;
  ::tensorflow::profiler::StepSummary* release_device_to_device_ms_summary();
  ::tensorflow::profiler::StepSummary* mutable_device_to_device_ms_summary();
  void set_allocated_device_to_device_ms_summary(::tensorflow::profiler::StepSummary* device_to_device_ms_summary);
  private:
  const ::tensorflow::profiler::StepSummary& _internal_device_to_device_ms_summary() const;
  ::tensorflow::profiler::StepSummary* _internal_mutable_device_to_device_ms_summary();
  public:

  // .tensorflow.profiler.StepSummary host_compute_ms_summary = 6;
  bool has_host_compute_ms_summary() const;
  private:
  bool _internal_has_host_compute_ms_summary() const;
  public:
  void clear_host_compute_ms_summary();
  const ::tensorflow::profiler::StepSummary& host_compute_ms_summary() const;
  ::tensorflow::profiler::StepSummary* release_host_compute_ms_summary();
  ::tensorflow::profiler::StepSummary* mutable_host_compute_ms_summary();
  void set_allocated_host_compute_ms_summary(::tensorflow::profiler::StepSummary* host_compute_ms_summary);
  private:
  const ::tensorflow::profiler::StepSummary& _internal_host_compute_ms_summary() const;
  ::tensorflow::profiler::StepSummary* _internal_mutable_host_compute_ms_summary();
  public:

  // .tensorflow.profiler.StepSummary host_prepare_ms_summary = 7;
  bool has_host_prepare_ms_summary() const;
  private:
  bool _internal_has_host_prepare_ms_summary() const;
  public:
  void clear_host_prepare_ms_summary();
  const ::tensorflow::profiler::StepSummary& host_prepare_ms_summary() const;
  ::tensorflow::profiler::StepSummary* release_host_prepare_ms_summary();
  ::tensorflow::profiler::StepSummary* mutable_host_prepare_ms_summary();
  void set_allocated_host_prepare_ms_summary(::tensorflow::profiler::StepSummary* host_prepare_ms_summary);
  private:
  const ::tensorflow::profiler::StepSummary& _internal_host_prepare_ms_summary() const;
  ::tensorflow::profiler::StepSummary* _internal_mutable_host_prepare_ms_summary();
  public:

  // .tensorflow.profiler.StepSummary host_compile_ms_summary = 8;
  bool has_host_compile_ms_summary() const;
  private:
  bool _internal_has_host_compile_ms_summary() const;
  public:
  void clear_host_compile_ms_summary();
  const ::tensorflow::profiler::StepSummary& host_compile_ms_summary() const;
  ::tensorflow::profiler::StepSummary* release_host_compile_ms_summary();
  ::tensorflow::profiler::StepSummary* mutable_host_compile_ms_summary();
  void set_allocated_host_compile_ms_summary(::tensorflow::profiler::StepSummary* host_compile_ms_summary);
  private:
  const ::tensorflow::profiler::StepSummary& _internal_host_compile_ms_summary() const;
  ::tensorflow::profiler::StepSummary* _internal_mutable_host_compile_ms_summary();
  public:

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.GenericStepTimeBreakdown)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::tensorflow::profiler::StepSummary* unknown_time_ms_summary_;
  ::tensorflow::profiler::StepSummary* infeed_ms_summary_;
  ::tensorflow::profiler::StepSummary* outfeed_ms_summary_;
  ::tensorflow::profiler::StepSummary* device_compute_ms_summary_;
  ::tensorflow::profiler::StepSummary* device_to_device_ms_summary_;
  ::tensorflow::profiler::StepSummary* host_compute_ms_summary_;
  ::tensorflow::profiler::StepSummary* host_prepare_ms_summary_;
  ::tensorflow::profiler::StepSummary* host_compile_ms_summary_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto;
};
// -------------------------------------------------------------------

class InputPipelineAnalysisResult :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.InputPipelineAnalysisResult) */ {
 public:
  InputPipelineAnalysisResult();
  virtual ~InputPipelineAnalysisResult();

  InputPipelineAnalysisResult(const InputPipelineAnalysisResult& from);
  InputPipelineAnalysisResult(InputPipelineAnalysisResult&& from) noexcept
    : InputPipelineAnalysisResult() {
    *this = ::std::move(from);
  }

  inline InputPipelineAnalysisResult& operator=(const InputPipelineAnalysisResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputPipelineAnalysisResult& operator=(InputPipelineAnalysisResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InputPipelineAnalysisResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputPipelineAnalysisResult* internal_default_instance() {
    return reinterpret_cast<const InputPipelineAnalysisResult*>(
               &_InputPipelineAnalysisResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(InputPipelineAnalysisResult& a, InputPipelineAnalysisResult& b) {
    a.Swap(&b);
  }
  inline void Swap(InputPipelineAnalysisResult* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputPipelineAnalysisResult* New() const final {
    return CreateMaybeMessage<InputPipelineAnalysisResult>(nullptr);
  }

  InputPipelineAnalysisResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputPipelineAnalysisResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InputPipelineAnalysisResult& from);
  void MergeFrom(const InputPipelineAnalysisResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputPipelineAnalysisResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tensorflow.profiler.InputPipelineAnalysisResult";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto);
    return ::descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStepDetailsFieldNumber = 4,
    kInputOpDetailsFieldNumber = 6,
    kStepTimeSummaryFieldNumber = 2,
    kInfeedPercentSummaryFieldNumber = 3,
    kInputTimeBreakdownFieldNumber = 5,
    kRecommendationFieldNumber = 7,
    kStepTimeBreakdownFieldNumber = 8,
    kHardwareTypeFieldNumber = 1,
  };
  // repeated .google.protobuf.Any step_details = 4;
  int step_details_size() const;
  private:
  int _internal_step_details_size() const;
  public:
  void clear_step_details();
  PROTOBUF_NAMESPACE_ID::Any* mutable_step_details(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< PROTOBUF_NAMESPACE_ID::Any >*
      mutable_step_details();
  private:
  const PROTOBUF_NAMESPACE_ID::Any& _internal_step_details(int index) const;
  PROTOBUF_NAMESPACE_ID::Any* _internal_add_step_details();
  public:
  const PROTOBUF_NAMESPACE_ID::Any& step_details(int index) const;
  PROTOBUF_NAMESPACE_ID::Any* add_step_details();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< PROTOBUF_NAMESPACE_ID::Any >&
      step_details() const;

  // repeated .tensorflow.profiler.InputOpDetails input_op_details = 6;
  int input_op_details_size() const;
  private:
  int _internal_input_op_details_size() const;
  public:
  void clear_input_op_details();
  ::tensorflow::profiler::InputOpDetails* mutable_input_op_details(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tensorflow::profiler::InputOpDetails >*
      mutable_input_op_details();
  private:
  const ::tensorflow::profiler::InputOpDetails& _internal_input_op_details(int index) const;
  ::tensorflow::profiler::InputOpDetails* _internal_add_input_op_details();
  public:
  const ::tensorflow::profiler::InputOpDetails& input_op_details(int index) const;
  ::tensorflow::profiler::InputOpDetails* add_input_op_details();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tensorflow::profiler::InputOpDetails >&
      input_op_details() const;

  // .tensorflow.profiler.StepSummary step_time_summary = 2;
  bool has_step_time_summary() const;
  private:
  bool _internal_has_step_time_summary() const;
  public:
  void clear_step_time_summary();
  const ::tensorflow::profiler::StepSummary& step_time_summary() const;
  ::tensorflow::profiler::StepSummary* release_step_time_summary();
  ::tensorflow::profiler::StepSummary* mutable_step_time_summary();
  void set_allocated_step_time_summary(::tensorflow::profiler::StepSummary* step_time_summary);
  private:
  const ::tensorflow::profiler::StepSummary& _internal_step_time_summary() const;
  ::tensorflow::profiler::StepSummary* _internal_mutable_step_time_summary();
  public:

  // .tensorflow.profiler.StepSummary infeed_percent_summary = 3;
  bool has_infeed_percent_summary() const;
  private:
  bool _internal_has_infeed_percent_summary() const;
  public:
  void clear_infeed_percent_summary();
  const ::tensorflow::profiler::StepSummary& infeed_percent_summary() const;
  ::tensorflow::profiler::StepSummary* release_infeed_percent_summary();
  ::tensorflow::profiler::StepSummary* mutable_infeed_percent_summary();
  void set_allocated_infeed_percent_summary(::tensorflow::profiler::StepSummary* infeed_percent_summary);
  private:
  const ::tensorflow::profiler::StepSummary& _internal_infeed_percent_summary() const;
  ::tensorflow::profiler::StepSummary* _internal_mutable_infeed_percent_summary();
  public:

  // .tensorflow.profiler.InputTimeBreakdown input_time_breakdown = 5;
  bool has_input_time_breakdown() const;
  private:
  bool _internal_has_input_time_breakdown() const;
  public:
  void clear_input_time_breakdown();
  const ::tensorflow::profiler::InputTimeBreakdown& input_time_breakdown() const;
  ::tensorflow::profiler::InputTimeBreakdown* release_input_time_breakdown();
  ::tensorflow::profiler::InputTimeBreakdown* mutable_input_time_breakdown();
  void set_allocated_input_time_breakdown(::tensorflow::profiler::InputTimeBreakdown* input_time_breakdown);
  private:
  const ::tensorflow::profiler::InputTimeBreakdown& _internal_input_time_breakdown() const;
  ::tensorflow::profiler::InputTimeBreakdown* _internal_mutable_input_time_breakdown();
  public:

  // .tensorflow.profiler.InputPipelineAnalysisRecommendation recommendation = 7;
  bool has_recommendation() const;
  private:
  bool _internal_has_recommendation() const;
  public:
  void clear_recommendation();
  const ::tensorflow::profiler::InputPipelineAnalysisRecommendation& recommendation() const;
  ::tensorflow::profiler::InputPipelineAnalysisRecommendation* release_recommendation();
  ::tensorflow::profiler::InputPipelineAnalysisRecommendation* mutable_recommendation();
  void set_allocated_recommendation(::tensorflow::profiler::InputPipelineAnalysisRecommendation* recommendation);
  private:
  const ::tensorflow::profiler::InputPipelineAnalysisRecommendation& _internal_recommendation() const;
  ::tensorflow::profiler::InputPipelineAnalysisRecommendation* _internal_mutable_recommendation();
  public:

  // .google.protobuf.Any step_time_breakdown = 8;
  bool has_step_time_breakdown() const;
  private:
  bool _internal_has_step_time_breakdown() const;
  public:
  void clear_step_time_breakdown();
  const PROTOBUF_NAMESPACE_ID::Any& step_time_breakdown() const;
  PROTOBUF_NAMESPACE_ID::Any* release_step_time_breakdown();
  PROTOBUF_NAMESPACE_ID::Any* mutable_step_time_breakdown();
  void set_allocated_step_time_breakdown(PROTOBUF_NAMESPACE_ID::Any* step_time_breakdown);
  private:
  const PROTOBUF_NAMESPACE_ID::Any& _internal_step_time_breakdown() const;
  PROTOBUF_NAMESPACE_ID::Any* _internal_mutable_step_time_breakdown();
  public:

  // .tensorflow.profiler.HardwareType hardware_type = 1;
  void clear_hardware_type();
  ::tensorflow::profiler::HardwareType hardware_type() const;
  void set_hardware_type(::tensorflow::profiler::HardwareType value);
  private:
  ::tensorflow::profiler::HardwareType _internal_hardware_type() const;
  void _internal_set_hardware_type(::tensorflow::profiler::HardwareType value);
  public:

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.InputPipelineAnalysisResult)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< PROTOBUF_NAMESPACE_ID::Any > step_details_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tensorflow::profiler::InputOpDetails > input_op_details_;
  ::tensorflow::profiler::StepSummary* step_time_summary_;
  ::tensorflow::profiler::StepSummary* infeed_percent_summary_;
  ::tensorflow::profiler::InputTimeBreakdown* input_time_breakdown_;
  ::tensorflow::profiler::InputPipelineAnalysisRecommendation* recommendation_;
  PROTOBUF_NAMESPACE_ID::Any* step_time_breakdown_;
  int hardware_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StepSummary

// double average = 1;
inline void StepSummary::clear_average() {
  average_ = 0;
}
inline double StepSummary::_internal_average() const {
  return average_;
}
inline double StepSummary::average() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.StepSummary.average)
  return _internal_average();
}
inline void StepSummary::_internal_set_average(double value) {
  
  average_ = value;
}
inline void StepSummary::set_average(double value) {
  _internal_set_average(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.StepSummary.average)
}

// double standard_deviation = 2;
inline void StepSummary::clear_standard_deviation() {
  standard_deviation_ = 0;
}
inline double StepSummary::_internal_standard_deviation() const {
  return standard_deviation_;
}
inline double StepSummary::standard_deviation() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.StepSummary.standard_deviation)
  return _internal_standard_deviation();
}
inline void StepSummary::_internal_set_standard_deviation(double value) {
  
  standard_deviation_ = value;
}
inline void StepSummary::set_standard_deviation(double value) {
  _internal_set_standard_deviation(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.StepSummary.standard_deviation)
}

// double minimum = 3;
inline void StepSummary::clear_minimum() {
  minimum_ = 0;
}
inline double StepSummary::_internal_minimum() const {
  return minimum_;
}
inline double StepSummary::minimum() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.StepSummary.minimum)
  return _internal_minimum();
}
inline void StepSummary::_internal_set_minimum(double value) {
  
  minimum_ = value;
}
inline void StepSummary::set_minimum(double value) {
  _internal_set_minimum(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.StepSummary.minimum)
}

// double maximum = 4;
inline void StepSummary::clear_maximum() {
  maximum_ = 0;
}
inline double StepSummary::_internal_maximum() const {
  return maximum_;
}
inline double StepSummary::maximum() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.StepSummary.maximum)
  return _internal_maximum();
}
inline void StepSummary::_internal_set_maximum(double value) {
  
  maximum_ = value;
}
inline void StepSummary::set_maximum(double value) {
  _internal_set_maximum(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.StepSummary.maximum)
}

// -------------------------------------------------------------------

// PerGenericStepDetails

// int32 step_number = 1;
inline void PerGenericStepDetails::clear_step_number() {
  step_number_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PerGenericStepDetails::_internal_step_number() const {
  return step_number_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PerGenericStepDetails::step_number() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PerGenericStepDetails.step_number)
  return _internal_step_number();
}
inline void PerGenericStepDetails::_internal_set_step_number(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  step_number_ = value;
}
inline void PerGenericStepDetails::set_step_number(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_step_number(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PerGenericStepDetails.step_number)
}

// double step_time_ms = 2;
inline void PerGenericStepDetails::clear_step_time_ms() {
  step_time_ms_ = 0;
}
inline double PerGenericStepDetails::_internal_step_time_ms() const {
  return step_time_ms_;
}
inline double PerGenericStepDetails::step_time_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PerGenericStepDetails.step_time_ms)
  return _internal_step_time_ms();
}
inline void PerGenericStepDetails::_internal_set_step_time_ms(double value) {
  
  step_time_ms_ = value;
}
inline void PerGenericStepDetails::set_step_time_ms(double value) {
  _internal_set_step_time_ms(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PerGenericStepDetails.step_time_ms)
}

// double unknown_time_ms = 3;
inline void PerGenericStepDetails::clear_unknown_time_ms() {
  unknown_time_ms_ = 0;
}
inline double PerGenericStepDetails::_internal_unknown_time_ms() const {
  return unknown_time_ms_;
}
inline double PerGenericStepDetails::unknown_time_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PerGenericStepDetails.unknown_time_ms)
  return _internal_unknown_time_ms();
}
inline void PerGenericStepDetails::_internal_set_unknown_time_ms(double value) {
  
  unknown_time_ms_ = value;
}
inline void PerGenericStepDetails::set_unknown_time_ms(double value) {
  _internal_set_unknown_time_ms(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PerGenericStepDetails.unknown_time_ms)
}

// double infeed_ms = 4;
inline void PerGenericStepDetails::clear_infeed_ms() {
  infeed_ms_ = 0;
}
inline double PerGenericStepDetails::_internal_infeed_ms() const {
  return infeed_ms_;
}
inline double PerGenericStepDetails::infeed_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PerGenericStepDetails.infeed_ms)
  return _internal_infeed_ms();
}
inline void PerGenericStepDetails::_internal_set_infeed_ms(double value) {
  
  infeed_ms_ = value;
}
inline void PerGenericStepDetails::set_infeed_ms(double value) {
  _internal_set_infeed_ms(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PerGenericStepDetails.infeed_ms)
}

// double outfeed_ms = 5;
inline void PerGenericStepDetails::clear_outfeed_ms() {
  outfeed_ms_ = 0;
}
inline double PerGenericStepDetails::_internal_outfeed_ms() const {
  return outfeed_ms_;
}
inline double PerGenericStepDetails::outfeed_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PerGenericStepDetails.outfeed_ms)
  return _internal_outfeed_ms();
}
inline void PerGenericStepDetails::_internal_set_outfeed_ms(double value) {
  
  outfeed_ms_ = value;
}
inline void PerGenericStepDetails::set_outfeed_ms(double value) {
  _internal_set_outfeed_ms(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PerGenericStepDetails.outfeed_ms)
}

// double device_compute_ms = 6;
inline void PerGenericStepDetails::clear_device_compute_ms() {
  device_compute_ms_ = 0;
}
inline double PerGenericStepDetails::_internal_device_compute_ms() const {
  return device_compute_ms_;
}
inline double PerGenericStepDetails::device_compute_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PerGenericStepDetails.device_compute_ms)
  return _internal_device_compute_ms();
}
inline void PerGenericStepDetails::_internal_set_device_compute_ms(double value) {
  
  device_compute_ms_ = value;
}
inline void PerGenericStepDetails::set_device_compute_ms(double value) {
  _internal_set_device_compute_ms(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PerGenericStepDetails.device_compute_ms)
}

// double device_to_device_ms = 7;
inline void PerGenericStepDetails::clear_device_to_device_ms() {
  device_to_device_ms_ = 0;
}
inline double PerGenericStepDetails::_internal_device_to_device_ms() const {
  return device_to_device_ms_;
}
inline double PerGenericStepDetails::device_to_device_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PerGenericStepDetails.device_to_device_ms)
  return _internal_device_to_device_ms();
}
inline void PerGenericStepDetails::_internal_set_device_to_device_ms(double value) {
  
  device_to_device_ms_ = value;
}
inline void PerGenericStepDetails::set_device_to_device_ms(double value) {
  _internal_set_device_to_device_ms(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PerGenericStepDetails.device_to_device_ms)
}

// double host_compute_ms = 8;
inline void PerGenericStepDetails::clear_host_compute_ms() {
  host_compute_ms_ = 0;
}
inline double PerGenericStepDetails::_internal_host_compute_ms() const {
  return host_compute_ms_;
}
inline double PerGenericStepDetails::host_compute_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PerGenericStepDetails.host_compute_ms)
  return _internal_host_compute_ms();
}
inline void PerGenericStepDetails::_internal_set_host_compute_ms(double value) {
  
  host_compute_ms_ = value;
}
inline void PerGenericStepDetails::set_host_compute_ms(double value) {
  _internal_set_host_compute_ms(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PerGenericStepDetails.host_compute_ms)
}

// double host_prepare_ms = 9;
inline void PerGenericStepDetails::clear_host_prepare_ms() {
  host_prepare_ms_ = 0;
}
inline double PerGenericStepDetails::_internal_host_prepare_ms() const {
  return host_prepare_ms_;
}
inline double PerGenericStepDetails::host_prepare_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PerGenericStepDetails.host_prepare_ms)
  return _internal_host_prepare_ms();
}
inline void PerGenericStepDetails::_internal_set_host_prepare_ms(double value) {
  
  host_prepare_ms_ = value;
}
inline void PerGenericStepDetails::set_host_prepare_ms(double value) {
  _internal_set_host_prepare_ms(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PerGenericStepDetails.host_prepare_ms)
}

// double host_compile_ms = 10;
inline void PerGenericStepDetails::clear_host_compile_ms() {
  host_compile_ms_ = 0;
}
inline double PerGenericStepDetails::_internal_host_compile_ms() const {
  return host_compile_ms_;
}
inline double PerGenericStepDetails::host_compile_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.PerGenericStepDetails.host_compile_ms)
  return _internal_host_compile_ms();
}
inline void PerGenericStepDetails::_internal_set_host_compile_ms(double value) {
  
  host_compile_ms_ = value;
}
inline void PerGenericStepDetails::set_host_compile_ms(double value) {
  _internal_set_host_compile_ms(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.PerGenericStepDetails.host_compile_ms)
}

// -------------------------------------------------------------------

// InputTimeBreakdown

// double demanded_file_read_us = 1;
inline void InputTimeBreakdown::clear_demanded_file_read_us() {
  demanded_file_read_us_ = 0;
}
inline double InputTimeBreakdown::_internal_demanded_file_read_us() const {
  return demanded_file_read_us_;
}
inline double InputTimeBreakdown::demanded_file_read_us() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputTimeBreakdown.demanded_file_read_us)
  return _internal_demanded_file_read_us();
}
inline void InputTimeBreakdown::_internal_set_demanded_file_read_us(double value) {
  
  demanded_file_read_us_ = value;
}
inline void InputTimeBreakdown::set_demanded_file_read_us(double value) {
  _internal_set_demanded_file_read_us(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputTimeBreakdown.demanded_file_read_us)
}

// double advanced_file_read_us = 2;
inline void InputTimeBreakdown::clear_advanced_file_read_us() {
  advanced_file_read_us_ = 0;
}
inline double InputTimeBreakdown::_internal_advanced_file_read_us() const {
  return advanced_file_read_us_;
}
inline double InputTimeBreakdown::advanced_file_read_us() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputTimeBreakdown.advanced_file_read_us)
  return _internal_advanced_file_read_us();
}
inline void InputTimeBreakdown::_internal_set_advanced_file_read_us(double value) {
  
  advanced_file_read_us_ = value;
}
inline void InputTimeBreakdown::set_advanced_file_read_us(double value) {
  _internal_set_advanced_file_read_us(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputTimeBreakdown.advanced_file_read_us)
}

// double preprocessing_us = 3;
inline void InputTimeBreakdown::clear_preprocessing_us() {
  preprocessing_us_ = 0;
}
inline double InputTimeBreakdown::_internal_preprocessing_us() const {
  return preprocessing_us_;
}
inline double InputTimeBreakdown::preprocessing_us() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputTimeBreakdown.preprocessing_us)
  return _internal_preprocessing_us();
}
inline void InputTimeBreakdown::_internal_set_preprocessing_us(double value) {
  
  preprocessing_us_ = value;
}
inline void InputTimeBreakdown::set_preprocessing_us(double value) {
  _internal_set_preprocessing_us(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputTimeBreakdown.preprocessing_us)
}

// double enqueue_us = 4;
inline void InputTimeBreakdown::clear_enqueue_us() {
  enqueue_us_ = 0;
}
inline double InputTimeBreakdown::_internal_enqueue_us() const {
  return enqueue_us_;
}
inline double InputTimeBreakdown::enqueue_us() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputTimeBreakdown.enqueue_us)
  return _internal_enqueue_us();
}
inline void InputTimeBreakdown::_internal_set_enqueue_us(double value) {
  
  enqueue_us_ = value;
}
inline void InputTimeBreakdown::set_enqueue_us(double value) {
  _internal_set_enqueue_us(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputTimeBreakdown.enqueue_us)
}

// double unclassified_non_enqueue_us = 5;
inline void InputTimeBreakdown::clear_unclassified_non_enqueue_us() {
  unclassified_non_enqueue_us_ = 0;
}
inline double InputTimeBreakdown::_internal_unclassified_non_enqueue_us() const {
  return unclassified_non_enqueue_us_;
}
inline double InputTimeBreakdown::unclassified_non_enqueue_us() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputTimeBreakdown.unclassified_non_enqueue_us)
  return _internal_unclassified_non_enqueue_us();
}
inline void InputTimeBreakdown::_internal_set_unclassified_non_enqueue_us(double value) {
  
  unclassified_non_enqueue_us_ = value;
}
inline void InputTimeBreakdown::set_unclassified_non_enqueue_us(double value) {
  _internal_set_unclassified_non_enqueue_us(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputTimeBreakdown.unclassified_non_enqueue_us)
}

// -------------------------------------------------------------------

// InputOpDetails

// string op_name = 1;
inline void InputOpDetails::clear_op_name() {
  op_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& InputOpDetails::op_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputOpDetails.op_name)
  return _internal_op_name();
}
inline void InputOpDetails::set_op_name(const std::string& value) {
  _internal_set_op_name(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputOpDetails.op_name)
}
inline std::string* InputOpDetails::mutable_op_name() {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputOpDetails.op_name)
  return _internal_mutable_op_name();
}
inline const std::string& InputOpDetails::_internal_op_name() const {
  return op_name_.GetNoArena();
}
inline void InputOpDetails::_internal_set_op_name(const std::string& value) {
  
  op_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void InputOpDetails::set_op_name(std::string&& value) {
  
  op_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.InputOpDetails.op_name)
}
inline void InputOpDetails::set_op_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  op_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.InputOpDetails.op_name)
}
inline void InputOpDetails::set_op_name(const char* value, size_t size) {
  
  op_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.InputOpDetails.op_name)
}
inline std::string* InputOpDetails::_internal_mutable_op_name() {
  
  return op_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* InputOpDetails::release_op_name() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.InputOpDetails.op_name)
  
  return op_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void InputOpDetails::set_allocated_op_name(std::string* op_name) {
  if (op_name != nullptr) {
    
  } else {
    
  }
  op_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), op_name);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.InputOpDetails.op_name)
}

// uint64 count = 2;
inline void InputOpDetails::clear_count() {
  count_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 InputOpDetails::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 InputOpDetails::count() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputOpDetails.count)
  return _internal_count();
}
inline void InputOpDetails::_internal_set_count(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  count_ = value;
}
inline void InputOpDetails::set_count(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputOpDetails.count)
}

// double time_in_ms = 3;
inline void InputOpDetails::clear_time_in_ms() {
  time_in_ms_ = 0;
}
inline double InputOpDetails::_internal_time_in_ms() const {
  return time_in_ms_;
}
inline double InputOpDetails::time_in_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputOpDetails.time_in_ms)
  return _internal_time_in_ms();
}
inline void InputOpDetails::_internal_set_time_in_ms(double value) {
  
  time_in_ms_ = value;
}
inline void InputOpDetails::set_time_in_ms(double value) {
  _internal_set_time_in_ms(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputOpDetails.time_in_ms)
}

// double time_in_percent = 4;
inline void InputOpDetails::clear_time_in_percent() {
  time_in_percent_ = 0;
}
inline double InputOpDetails::_internal_time_in_percent() const {
  return time_in_percent_;
}
inline double InputOpDetails::time_in_percent() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputOpDetails.time_in_percent)
  return _internal_time_in_percent();
}
inline void InputOpDetails::_internal_set_time_in_percent(double value) {
  
  time_in_percent_ = value;
}
inline void InputOpDetails::set_time_in_percent(double value) {
  _internal_set_time_in_percent(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputOpDetails.time_in_percent)
}

// double self_time_in_ms = 5;
inline void InputOpDetails::clear_self_time_in_ms() {
  self_time_in_ms_ = 0;
}
inline double InputOpDetails::_internal_self_time_in_ms() const {
  return self_time_in_ms_;
}
inline double InputOpDetails::self_time_in_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputOpDetails.self_time_in_ms)
  return _internal_self_time_in_ms();
}
inline void InputOpDetails::_internal_set_self_time_in_ms(double value) {
  
  self_time_in_ms_ = value;
}
inline void InputOpDetails::set_self_time_in_ms(double value) {
  _internal_set_self_time_in_ms(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputOpDetails.self_time_in_ms)
}

// double self_time_in_percent = 6;
inline void InputOpDetails::clear_self_time_in_percent() {
  self_time_in_percent_ = 0;
}
inline double InputOpDetails::_internal_self_time_in_percent() const {
  return self_time_in_percent_;
}
inline double InputOpDetails::self_time_in_percent() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputOpDetails.self_time_in_percent)
  return _internal_self_time_in_percent();
}
inline void InputOpDetails::_internal_set_self_time_in_percent(double value) {
  
  self_time_in_percent_ = value;
}
inline void InputOpDetails::set_self_time_in_percent(double value) {
  _internal_set_self_time_in_percent(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputOpDetails.self_time_in_percent)
}

// string category = 7;
inline void InputOpDetails::clear_category() {
  category_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& InputOpDetails::category() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputOpDetails.category)
  return _internal_category();
}
inline void InputOpDetails::set_category(const std::string& value) {
  _internal_set_category(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputOpDetails.category)
}
inline std::string* InputOpDetails::mutable_category() {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputOpDetails.category)
  return _internal_mutable_category();
}
inline const std::string& InputOpDetails::_internal_category() const {
  return category_.GetNoArena();
}
inline void InputOpDetails::_internal_set_category(const std::string& value) {
  
  category_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void InputOpDetails::set_category(std::string&& value) {
  
  category_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.InputOpDetails.category)
}
inline void InputOpDetails::set_category(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  category_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.InputOpDetails.category)
}
inline void InputOpDetails::set_category(const char* value, size_t size) {
  
  category_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.InputOpDetails.category)
}
inline std::string* InputOpDetails::_internal_mutable_category() {
  
  return category_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* InputOpDetails::release_category() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.InputOpDetails.category)
  
  return category_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void InputOpDetails::set_allocated_category(std::string* category) {
  if (category != nullptr) {
    
  } else {
    
  }
  category_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), category);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.InputOpDetails.category)
}

// -------------------------------------------------------------------

// InputPipelineAnalysisRecommendation

// repeated string details = 1;
inline int InputPipelineAnalysisRecommendation::_internal_details_size() const {
  return details_.size();
}
inline int InputPipelineAnalysisRecommendation::details_size() const {
  return _internal_details_size();
}
inline void InputPipelineAnalysisRecommendation::clear_details() {
  details_.Clear();
}
inline std::string* InputPipelineAnalysisRecommendation::add_details() {
  // @@protoc_insertion_point(field_add_mutable:tensorflow.profiler.InputPipelineAnalysisRecommendation.details)
  return _internal_add_details();
}
inline const std::string& InputPipelineAnalysisRecommendation::_internal_details(int index) const {
  return details_.Get(index);
}
inline const std::string& InputPipelineAnalysisRecommendation::details(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineAnalysisRecommendation.details)
  return _internal_details(index);
}
inline std::string* InputPipelineAnalysisRecommendation::mutable_details(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputPipelineAnalysisRecommendation.details)
  return details_.Mutable(index);
}
inline void InputPipelineAnalysisRecommendation::set_details(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputPipelineAnalysisRecommendation.details)
  details_.Mutable(index)->assign(value);
}
inline void InputPipelineAnalysisRecommendation::set_details(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputPipelineAnalysisRecommendation.details)
  details_.Mutable(index)->assign(std::move(value));
}
inline void InputPipelineAnalysisRecommendation::set_details(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  details_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.InputPipelineAnalysisRecommendation.details)
}
inline void InputPipelineAnalysisRecommendation::set_details(int index, const char* value, size_t size) {
  details_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.InputPipelineAnalysisRecommendation.details)
}
inline std::string* InputPipelineAnalysisRecommendation::_internal_add_details() {
  return details_.Add();
}
inline void InputPipelineAnalysisRecommendation::add_details(const std::string& value) {
  details_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tensorflow.profiler.InputPipelineAnalysisRecommendation.details)
}
inline void InputPipelineAnalysisRecommendation::add_details(std::string&& value) {
  details_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:tensorflow.profiler.InputPipelineAnalysisRecommendation.details)
}
inline void InputPipelineAnalysisRecommendation::add_details(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  details_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tensorflow.profiler.InputPipelineAnalysisRecommendation.details)
}
inline void InputPipelineAnalysisRecommendation::add_details(const char* value, size_t size) {
  details_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tensorflow.profiler.InputPipelineAnalysisRecommendation.details)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
InputPipelineAnalysisRecommendation::details() const {
  // @@protoc_insertion_point(field_list:tensorflow.profiler.InputPipelineAnalysisRecommendation.details)
  return details_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
InputPipelineAnalysisRecommendation::mutable_details() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.profiler.InputPipelineAnalysisRecommendation.details)
  return &details_;
}

// -------------------------------------------------------------------

// GenericStepTimeBreakdown

// .tensorflow.profiler.StepSummary unknown_time_ms_summary = 1;
inline bool GenericStepTimeBreakdown::_internal_has_unknown_time_ms_summary() const {
  return this != internal_default_instance() && unknown_time_ms_summary_ != nullptr;
}
inline bool GenericStepTimeBreakdown::has_unknown_time_ms_summary() const {
  return _internal_has_unknown_time_ms_summary();
}
inline void GenericStepTimeBreakdown::clear_unknown_time_ms_summary() {
  if (GetArenaNoVirtual() == nullptr && unknown_time_ms_summary_ != nullptr) {
    delete unknown_time_ms_summary_;
  }
  unknown_time_ms_summary_ = nullptr;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::_internal_unknown_time_ms_summary() const {
  const ::tensorflow::profiler::StepSummary* p = unknown_time_ms_summary_;
  return p != nullptr ? *p : *reinterpret_cast<const ::tensorflow::profiler::StepSummary*>(
      &::tensorflow::profiler::_StepSummary_default_instance_);
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::unknown_time_ms_summary() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.GenericStepTimeBreakdown.unknown_time_ms_summary)
  return _internal_unknown_time_ms_summary();
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::release_unknown_time_ms_summary() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.GenericStepTimeBreakdown.unknown_time_ms_summary)
  
  ::tensorflow::profiler::StepSummary* temp = unknown_time_ms_summary_;
  unknown_time_ms_summary_ = nullptr;
  return temp;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::_internal_mutable_unknown_time_ms_summary() {
  
  if (unknown_time_ms_summary_ == nullptr) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::StepSummary>(GetArenaNoVirtual());
    unknown_time_ms_summary_ = p;
  }
  return unknown_time_ms_summary_;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::mutable_unknown_time_ms_summary() {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.GenericStepTimeBreakdown.unknown_time_ms_summary)
  return _internal_mutable_unknown_time_ms_summary();
}
inline void GenericStepTimeBreakdown::set_allocated_unknown_time_ms_summary(::tensorflow::profiler::StepSummary* unknown_time_ms_summary) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete unknown_time_ms_summary_;
  }
  if (unknown_time_ms_summary) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      unknown_time_ms_summary = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, unknown_time_ms_summary, submessage_arena);
    }
    
  } else {
    
  }
  unknown_time_ms_summary_ = unknown_time_ms_summary;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.GenericStepTimeBreakdown.unknown_time_ms_summary)
}

// .tensorflow.profiler.StepSummary infeed_ms_summary = 2;
inline bool GenericStepTimeBreakdown::_internal_has_infeed_ms_summary() const {
  return this != internal_default_instance() && infeed_ms_summary_ != nullptr;
}
inline bool GenericStepTimeBreakdown::has_infeed_ms_summary() const {
  return _internal_has_infeed_ms_summary();
}
inline void GenericStepTimeBreakdown::clear_infeed_ms_summary() {
  if (GetArenaNoVirtual() == nullptr && infeed_ms_summary_ != nullptr) {
    delete infeed_ms_summary_;
  }
  infeed_ms_summary_ = nullptr;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::_internal_infeed_ms_summary() const {
  const ::tensorflow::profiler::StepSummary* p = infeed_ms_summary_;
  return p != nullptr ? *p : *reinterpret_cast<const ::tensorflow::profiler::StepSummary*>(
      &::tensorflow::profiler::_StepSummary_default_instance_);
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::infeed_ms_summary() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.GenericStepTimeBreakdown.infeed_ms_summary)
  return _internal_infeed_ms_summary();
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::release_infeed_ms_summary() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.GenericStepTimeBreakdown.infeed_ms_summary)
  
  ::tensorflow::profiler::StepSummary* temp = infeed_ms_summary_;
  infeed_ms_summary_ = nullptr;
  return temp;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::_internal_mutable_infeed_ms_summary() {
  
  if (infeed_ms_summary_ == nullptr) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::StepSummary>(GetArenaNoVirtual());
    infeed_ms_summary_ = p;
  }
  return infeed_ms_summary_;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::mutable_infeed_ms_summary() {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.GenericStepTimeBreakdown.infeed_ms_summary)
  return _internal_mutable_infeed_ms_summary();
}
inline void GenericStepTimeBreakdown::set_allocated_infeed_ms_summary(::tensorflow::profiler::StepSummary* infeed_ms_summary) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete infeed_ms_summary_;
  }
  if (infeed_ms_summary) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      infeed_ms_summary = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, infeed_ms_summary, submessage_arena);
    }
    
  } else {
    
  }
  infeed_ms_summary_ = infeed_ms_summary;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.GenericStepTimeBreakdown.infeed_ms_summary)
}

// .tensorflow.profiler.StepSummary outfeed_ms_summary = 3;
inline bool GenericStepTimeBreakdown::_internal_has_outfeed_ms_summary() const {
  return this != internal_default_instance() && outfeed_ms_summary_ != nullptr;
}
inline bool GenericStepTimeBreakdown::has_outfeed_ms_summary() const {
  return _internal_has_outfeed_ms_summary();
}
inline void GenericStepTimeBreakdown::clear_outfeed_ms_summary() {
  if (GetArenaNoVirtual() == nullptr && outfeed_ms_summary_ != nullptr) {
    delete outfeed_ms_summary_;
  }
  outfeed_ms_summary_ = nullptr;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::_internal_outfeed_ms_summary() const {
  const ::tensorflow::profiler::StepSummary* p = outfeed_ms_summary_;
  return p != nullptr ? *p : *reinterpret_cast<const ::tensorflow::profiler::StepSummary*>(
      &::tensorflow::profiler::_StepSummary_default_instance_);
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::outfeed_ms_summary() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.GenericStepTimeBreakdown.outfeed_ms_summary)
  return _internal_outfeed_ms_summary();
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::release_outfeed_ms_summary() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.GenericStepTimeBreakdown.outfeed_ms_summary)
  
  ::tensorflow::profiler::StepSummary* temp = outfeed_ms_summary_;
  outfeed_ms_summary_ = nullptr;
  return temp;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::_internal_mutable_outfeed_ms_summary() {
  
  if (outfeed_ms_summary_ == nullptr) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::StepSummary>(GetArenaNoVirtual());
    outfeed_ms_summary_ = p;
  }
  return outfeed_ms_summary_;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::mutable_outfeed_ms_summary() {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.GenericStepTimeBreakdown.outfeed_ms_summary)
  return _internal_mutable_outfeed_ms_summary();
}
inline void GenericStepTimeBreakdown::set_allocated_outfeed_ms_summary(::tensorflow::profiler::StepSummary* outfeed_ms_summary) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete outfeed_ms_summary_;
  }
  if (outfeed_ms_summary) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      outfeed_ms_summary = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, outfeed_ms_summary, submessage_arena);
    }
    
  } else {
    
  }
  outfeed_ms_summary_ = outfeed_ms_summary;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.GenericStepTimeBreakdown.outfeed_ms_summary)
}

// .tensorflow.profiler.StepSummary device_compute_ms_summary = 4;
inline bool GenericStepTimeBreakdown::_internal_has_device_compute_ms_summary() const {
  return this != internal_default_instance() && device_compute_ms_summary_ != nullptr;
}
inline bool GenericStepTimeBreakdown::has_device_compute_ms_summary() const {
  return _internal_has_device_compute_ms_summary();
}
inline void GenericStepTimeBreakdown::clear_device_compute_ms_summary() {
  if (GetArenaNoVirtual() == nullptr && device_compute_ms_summary_ != nullptr) {
    delete device_compute_ms_summary_;
  }
  device_compute_ms_summary_ = nullptr;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::_internal_device_compute_ms_summary() const {
  const ::tensorflow::profiler::StepSummary* p = device_compute_ms_summary_;
  return p != nullptr ? *p : *reinterpret_cast<const ::tensorflow::profiler::StepSummary*>(
      &::tensorflow::profiler::_StepSummary_default_instance_);
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::device_compute_ms_summary() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.GenericStepTimeBreakdown.device_compute_ms_summary)
  return _internal_device_compute_ms_summary();
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::release_device_compute_ms_summary() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.GenericStepTimeBreakdown.device_compute_ms_summary)
  
  ::tensorflow::profiler::StepSummary* temp = device_compute_ms_summary_;
  device_compute_ms_summary_ = nullptr;
  return temp;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::_internal_mutable_device_compute_ms_summary() {
  
  if (device_compute_ms_summary_ == nullptr) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::StepSummary>(GetArenaNoVirtual());
    device_compute_ms_summary_ = p;
  }
  return device_compute_ms_summary_;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::mutable_device_compute_ms_summary() {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.GenericStepTimeBreakdown.device_compute_ms_summary)
  return _internal_mutable_device_compute_ms_summary();
}
inline void GenericStepTimeBreakdown::set_allocated_device_compute_ms_summary(::tensorflow::profiler::StepSummary* device_compute_ms_summary) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete device_compute_ms_summary_;
  }
  if (device_compute_ms_summary) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      device_compute_ms_summary = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, device_compute_ms_summary, submessage_arena);
    }
    
  } else {
    
  }
  device_compute_ms_summary_ = device_compute_ms_summary;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.GenericStepTimeBreakdown.device_compute_ms_summary)
}

// .tensorflow.profiler.StepSummary device_to_device_ms_summary = 5;
inline bool GenericStepTimeBreakdown::_internal_has_device_to_device_ms_summary() const {
  return this != internal_default_instance() && device_to_device_ms_summary_ != nullptr;
}
inline bool GenericStepTimeBreakdown::has_device_to_device_ms_summary() const {
  return _internal_has_device_to_device_ms_summary();
}
inline void GenericStepTimeBreakdown::clear_device_to_device_ms_summary() {
  if (GetArenaNoVirtual() == nullptr && device_to_device_ms_summary_ != nullptr) {
    delete device_to_device_ms_summary_;
  }
  device_to_device_ms_summary_ = nullptr;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::_internal_device_to_device_ms_summary() const {
  const ::tensorflow::profiler::StepSummary* p = device_to_device_ms_summary_;
  return p != nullptr ? *p : *reinterpret_cast<const ::tensorflow::profiler::StepSummary*>(
      &::tensorflow::profiler::_StepSummary_default_instance_);
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::device_to_device_ms_summary() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.GenericStepTimeBreakdown.device_to_device_ms_summary)
  return _internal_device_to_device_ms_summary();
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::release_device_to_device_ms_summary() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.GenericStepTimeBreakdown.device_to_device_ms_summary)
  
  ::tensorflow::profiler::StepSummary* temp = device_to_device_ms_summary_;
  device_to_device_ms_summary_ = nullptr;
  return temp;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::_internal_mutable_device_to_device_ms_summary() {
  
  if (device_to_device_ms_summary_ == nullptr) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::StepSummary>(GetArenaNoVirtual());
    device_to_device_ms_summary_ = p;
  }
  return device_to_device_ms_summary_;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::mutable_device_to_device_ms_summary() {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.GenericStepTimeBreakdown.device_to_device_ms_summary)
  return _internal_mutable_device_to_device_ms_summary();
}
inline void GenericStepTimeBreakdown::set_allocated_device_to_device_ms_summary(::tensorflow::profiler::StepSummary* device_to_device_ms_summary) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete device_to_device_ms_summary_;
  }
  if (device_to_device_ms_summary) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      device_to_device_ms_summary = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, device_to_device_ms_summary, submessage_arena);
    }
    
  } else {
    
  }
  device_to_device_ms_summary_ = device_to_device_ms_summary;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.GenericStepTimeBreakdown.device_to_device_ms_summary)
}

// .tensorflow.profiler.StepSummary host_compute_ms_summary = 6;
inline bool GenericStepTimeBreakdown::_internal_has_host_compute_ms_summary() const {
  return this != internal_default_instance() && host_compute_ms_summary_ != nullptr;
}
inline bool GenericStepTimeBreakdown::has_host_compute_ms_summary() const {
  return _internal_has_host_compute_ms_summary();
}
inline void GenericStepTimeBreakdown::clear_host_compute_ms_summary() {
  if (GetArenaNoVirtual() == nullptr && host_compute_ms_summary_ != nullptr) {
    delete host_compute_ms_summary_;
  }
  host_compute_ms_summary_ = nullptr;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::_internal_host_compute_ms_summary() const {
  const ::tensorflow::profiler::StepSummary* p = host_compute_ms_summary_;
  return p != nullptr ? *p : *reinterpret_cast<const ::tensorflow::profiler::StepSummary*>(
      &::tensorflow::profiler::_StepSummary_default_instance_);
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::host_compute_ms_summary() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.GenericStepTimeBreakdown.host_compute_ms_summary)
  return _internal_host_compute_ms_summary();
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::release_host_compute_ms_summary() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.GenericStepTimeBreakdown.host_compute_ms_summary)
  
  ::tensorflow::profiler::StepSummary* temp = host_compute_ms_summary_;
  host_compute_ms_summary_ = nullptr;
  return temp;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::_internal_mutable_host_compute_ms_summary() {
  
  if (host_compute_ms_summary_ == nullptr) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::StepSummary>(GetArenaNoVirtual());
    host_compute_ms_summary_ = p;
  }
  return host_compute_ms_summary_;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::mutable_host_compute_ms_summary() {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.GenericStepTimeBreakdown.host_compute_ms_summary)
  return _internal_mutable_host_compute_ms_summary();
}
inline void GenericStepTimeBreakdown::set_allocated_host_compute_ms_summary(::tensorflow::profiler::StepSummary* host_compute_ms_summary) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete host_compute_ms_summary_;
  }
  if (host_compute_ms_summary) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      host_compute_ms_summary = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, host_compute_ms_summary, submessage_arena);
    }
    
  } else {
    
  }
  host_compute_ms_summary_ = host_compute_ms_summary;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.GenericStepTimeBreakdown.host_compute_ms_summary)
}

// .tensorflow.profiler.StepSummary host_prepare_ms_summary = 7;
inline bool GenericStepTimeBreakdown::_internal_has_host_prepare_ms_summary() const {
  return this != internal_default_instance() && host_prepare_ms_summary_ != nullptr;
}
inline bool GenericStepTimeBreakdown::has_host_prepare_ms_summary() const {
  return _internal_has_host_prepare_ms_summary();
}
inline void GenericStepTimeBreakdown::clear_host_prepare_ms_summary() {
  if (GetArenaNoVirtual() == nullptr && host_prepare_ms_summary_ != nullptr) {
    delete host_prepare_ms_summary_;
  }
  host_prepare_ms_summary_ = nullptr;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::_internal_host_prepare_ms_summary() const {
  const ::tensorflow::profiler::StepSummary* p = host_prepare_ms_summary_;
  return p != nullptr ? *p : *reinterpret_cast<const ::tensorflow::profiler::StepSummary*>(
      &::tensorflow::profiler::_StepSummary_default_instance_);
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::host_prepare_ms_summary() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.GenericStepTimeBreakdown.host_prepare_ms_summary)
  return _internal_host_prepare_ms_summary();
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::release_host_prepare_ms_summary() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.GenericStepTimeBreakdown.host_prepare_ms_summary)
  
  ::tensorflow::profiler::StepSummary* temp = host_prepare_ms_summary_;
  host_prepare_ms_summary_ = nullptr;
  return temp;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::_internal_mutable_host_prepare_ms_summary() {
  
  if (host_prepare_ms_summary_ == nullptr) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::StepSummary>(GetArenaNoVirtual());
    host_prepare_ms_summary_ = p;
  }
  return host_prepare_ms_summary_;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::mutable_host_prepare_ms_summary() {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.GenericStepTimeBreakdown.host_prepare_ms_summary)
  return _internal_mutable_host_prepare_ms_summary();
}
inline void GenericStepTimeBreakdown::set_allocated_host_prepare_ms_summary(::tensorflow::profiler::StepSummary* host_prepare_ms_summary) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete host_prepare_ms_summary_;
  }
  if (host_prepare_ms_summary) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      host_prepare_ms_summary = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, host_prepare_ms_summary, submessage_arena);
    }
    
  } else {
    
  }
  host_prepare_ms_summary_ = host_prepare_ms_summary;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.GenericStepTimeBreakdown.host_prepare_ms_summary)
}

// .tensorflow.profiler.StepSummary host_compile_ms_summary = 8;
inline bool GenericStepTimeBreakdown::_internal_has_host_compile_ms_summary() const {
  return this != internal_default_instance() && host_compile_ms_summary_ != nullptr;
}
inline bool GenericStepTimeBreakdown::has_host_compile_ms_summary() const {
  return _internal_has_host_compile_ms_summary();
}
inline void GenericStepTimeBreakdown::clear_host_compile_ms_summary() {
  if (GetArenaNoVirtual() == nullptr && host_compile_ms_summary_ != nullptr) {
    delete host_compile_ms_summary_;
  }
  host_compile_ms_summary_ = nullptr;
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::_internal_host_compile_ms_summary() const {
  const ::tensorflow::profiler::StepSummary* p = host_compile_ms_summary_;
  return p != nullptr ? *p : *reinterpret_cast<const ::tensorflow::profiler::StepSummary*>(
      &::tensorflow::profiler::_StepSummary_default_instance_);
}
inline const ::tensorflow::profiler::StepSummary& GenericStepTimeBreakdown::host_compile_ms_summary() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.GenericStepTimeBreakdown.host_compile_ms_summary)
  return _internal_host_compile_ms_summary();
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::release_host_compile_ms_summary() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.GenericStepTimeBreakdown.host_compile_ms_summary)
  
  ::tensorflow::profiler::StepSummary* temp = host_compile_ms_summary_;
  host_compile_ms_summary_ = nullptr;
  return temp;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::_internal_mutable_host_compile_ms_summary() {
  
  if (host_compile_ms_summary_ == nullptr) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::StepSummary>(GetArenaNoVirtual());
    host_compile_ms_summary_ = p;
  }
  return host_compile_ms_summary_;
}
inline ::tensorflow::profiler::StepSummary* GenericStepTimeBreakdown::mutable_host_compile_ms_summary() {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.GenericStepTimeBreakdown.host_compile_ms_summary)
  return _internal_mutable_host_compile_ms_summary();
}
inline void GenericStepTimeBreakdown::set_allocated_host_compile_ms_summary(::tensorflow::profiler::StepSummary* host_compile_ms_summary) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete host_compile_ms_summary_;
  }
  if (host_compile_ms_summary) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      host_compile_ms_summary = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, host_compile_ms_summary, submessage_arena);
    }
    
  } else {
    
  }
  host_compile_ms_summary_ = host_compile_ms_summary;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.GenericStepTimeBreakdown.host_compile_ms_summary)
}

// -------------------------------------------------------------------

// InputPipelineAnalysisResult

// .tensorflow.profiler.HardwareType hardware_type = 1;
inline void InputPipelineAnalysisResult::clear_hardware_type() {
  hardware_type_ = 0;
}
inline ::tensorflow::profiler::HardwareType InputPipelineAnalysisResult::_internal_hardware_type() const {
  return static_cast< ::tensorflow::profiler::HardwareType >(hardware_type_);
}
inline ::tensorflow::profiler::HardwareType InputPipelineAnalysisResult::hardware_type() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineAnalysisResult.hardware_type)
  return _internal_hardware_type();
}
inline void InputPipelineAnalysisResult::_internal_set_hardware_type(::tensorflow::profiler::HardwareType value) {
  
  hardware_type_ = value;
}
inline void InputPipelineAnalysisResult::set_hardware_type(::tensorflow::profiler::HardwareType value) {
  _internal_set_hardware_type(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.InputPipelineAnalysisResult.hardware_type)
}

// .tensorflow.profiler.StepSummary step_time_summary = 2;
inline bool InputPipelineAnalysisResult::_internal_has_step_time_summary() const {
  return this != internal_default_instance() && step_time_summary_ != nullptr;
}
inline bool InputPipelineAnalysisResult::has_step_time_summary() const {
  return _internal_has_step_time_summary();
}
inline void InputPipelineAnalysisResult::clear_step_time_summary() {
  if (GetArenaNoVirtual() == nullptr && step_time_summary_ != nullptr) {
    delete step_time_summary_;
  }
  step_time_summary_ = nullptr;
}
inline const ::tensorflow::profiler::StepSummary& InputPipelineAnalysisResult::_internal_step_time_summary() const {
  const ::tensorflow::profiler::StepSummary* p = step_time_summary_;
  return p != nullptr ? *p : *reinterpret_cast<const ::tensorflow::profiler::StepSummary*>(
      &::tensorflow::profiler::_StepSummary_default_instance_);
}
inline const ::tensorflow::profiler::StepSummary& InputPipelineAnalysisResult::step_time_summary() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineAnalysisResult.step_time_summary)
  return _internal_step_time_summary();
}
inline ::tensorflow::profiler::StepSummary* InputPipelineAnalysisResult::release_step_time_summary() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.InputPipelineAnalysisResult.step_time_summary)
  
  ::tensorflow::profiler::StepSummary* temp = step_time_summary_;
  step_time_summary_ = nullptr;
  return temp;
}
inline ::tensorflow::profiler::StepSummary* InputPipelineAnalysisResult::_internal_mutable_step_time_summary() {
  
  if (step_time_summary_ == nullptr) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::StepSummary>(GetArenaNoVirtual());
    step_time_summary_ = p;
  }
  return step_time_summary_;
}
inline ::tensorflow::profiler::StepSummary* InputPipelineAnalysisResult::mutable_step_time_summary() {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputPipelineAnalysisResult.step_time_summary)
  return _internal_mutable_step_time_summary();
}
inline void InputPipelineAnalysisResult::set_allocated_step_time_summary(::tensorflow::profiler::StepSummary* step_time_summary) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete step_time_summary_;
  }
  if (step_time_summary) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      step_time_summary = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, step_time_summary, submessage_arena);
    }
    
  } else {
    
  }
  step_time_summary_ = step_time_summary;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.InputPipelineAnalysisResult.step_time_summary)
}

// .tensorflow.profiler.StepSummary infeed_percent_summary = 3;
inline bool InputPipelineAnalysisResult::_internal_has_infeed_percent_summary() const {
  return this != internal_default_instance() && infeed_percent_summary_ != nullptr;
}
inline bool InputPipelineAnalysisResult::has_infeed_percent_summary() const {
  return _internal_has_infeed_percent_summary();
}
inline void InputPipelineAnalysisResult::clear_infeed_percent_summary() {
  if (GetArenaNoVirtual() == nullptr && infeed_percent_summary_ != nullptr) {
    delete infeed_percent_summary_;
  }
  infeed_percent_summary_ = nullptr;
}
inline const ::tensorflow::profiler::StepSummary& InputPipelineAnalysisResult::_internal_infeed_percent_summary() const {
  const ::tensorflow::profiler::StepSummary* p = infeed_percent_summary_;
  return p != nullptr ? *p : *reinterpret_cast<const ::tensorflow::profiler::StepSummary*>(
      &::tensorflow::profiler::_StepSummary_default_instance_);
}
inline const ::tensorflow::profiler::StepSummary& InputPipelineAnalysisResult::infeed_percent_summary() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineAnalysisResult.infeed_percent_summary)
  return _internal_infeed_percent_summary();
}
inline ::tensorflow::profiler::StepSummary* InputPipelineAnalysisResult::release_infeed_percent_summary() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.InputPipelineAnalysisResult.infeed_percent_summary)
  
  ::tensorflow::profiler::StepSummary* temp = infeed_percent_summary_;
  infeed_percent_summary_ = nullptr;
  return temp;
}
inline ::tensorflow::profiler::StepSummary* InputPipelineAnalysisResult::_internal_mutable_infeed_percent_summary() {
  
  if (infeed_percent_summary_ == nullptr) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::StepSummary>(GetArenaNoVirtual());
    infeed_percent_summary_ = p;
  }
  return infeed_percent_summary_;
}
inline ::tensorflow::profiler::StepSummary* InputPipelineAnalysisResult::mutable_infeed_percent_summary() {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputPipelineAnalysisResult.infeed_percent_summary)
  return _internal_mutable_infeed_percent_summary();
}
inline void InputPipelineAnalysisResult::set_allocated_infeed_percent_summary(::tensorflow::profiler::StepSummary* infeed_percent_summary) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete infeed_percent_summary_;
  }
  if (infeed_percent_summary) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      infeed_percent_summary = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, infeed_percent_summary, submessage_arena);
    }
    
  } else {
    
  }
  infeed_percent_summary_ = infeed_percent_summary;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.InputPipelineAnalysisResult.infeed_percent_summary)
}

// repeated .google.protobuf.Any step_details = 4;
inline int InputPipelineAnalysisResult::_internal_step_details_size() const {
  return step_details_.size();
}
inline int InputPipelineAnalysisResult::step_details_size() const {
  return _internal_step_details_size();
}
inline PROTOBUF_NAMESPACE_ID::Any* InputPipelineAnalysisResult::mutable_step_details(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputPipelineAnalysisResult.step_details)
  return step_details_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< PROTOBUF_NAMESPACE_ID::Any >*
InputPipelineAnalysisResult::mutable_step_details() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.profiler.InputPipelineAnalysisResult.step_details)
  return &step_details_;
}
inline const PROTOBUF_NAMESPACE_ID::Any& InputPipelineAnalysisResult::_internal_step_details(int index) const {
  return step_details_.Get(index);
}
inline const PROTOBUF_NAMESPACE_ID::Any& InputPipelineAnalysisResult::step_details(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineAnalysisResult.step_details)
  return _internal_step_details(index);
}
inline PROTOBUF_NAMESPACE_ID::Any* InputPipelineAnalysisResult::_internal_add_step_details() {
  return step_details_.Add();
}
inline PROTOBUF_NAMESPACE_ID::Any* InputPipelineAnalysisResult::add_step_details() {
  // @@protoc_insertion_point(field_add:tensorflow.profiler.InputPipelineAnalysisResult.step_details)
  return _internal_add_step_details();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< PROTOBUF_NAMESPACE_ID::Any >&
InputPipelineAnalysisResult::step_details() const {
  // @@protoc_insertion_point(field_list:tensorflow.profiler.InputPipelineAnalysisResult.step_details)
  return step_details_;
}

// .tensorflow.profiler.InputTimeBreakdown input_time_breakdown = 5;
inline bool InputPipelineAnalysisResult::_internal_has_input_time_breakdown() const {
  return this != internal_default_instance() && input_time_breakdown_ != nullptr;
}
inline bool InputPipelineAnalysisResult::has_input_time_breakdown() const {
  return _internal_has_input_time_breakdown();
}
inline void InputPipelineAnalysisResult::clear_input_time_breakdown() {
  if (GetArenaNoVirtual() == nullptr && input_time_breakdown_ != nullptr) {
    delete input_time_breakdown_;
  }
  input_time_breakdown_ = nullptr;
}
inline const ::tensorflow::profiler::InputTimeBreakdown& InputPipelineAnalysisResult::_internal_input_time_breakdown() const {
  const ::tensorflow::profiler::InputTimeBreakdown* p = input_time_breakdown_;
  return p != nullptr ? *p : *reinterpret_cast<const ::tensorflow::profiler::InputTimeBreakdown*>(
      &::tensorflow::profiler::_InputTimeBreakdown_default_instance_);
}
inline const ::tensorflow::profiler::InputTimeBreakdown& InputPipelineAnalysisResult::input_time_breakdown() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineAnalysisResult.input_time_breakdown)
  return _internal_input_time_breakdown();
}
inline ::tensorflow::profiler::InputTimeBreakdown* InputPipelineAnalysisResult::release_input_time_breakdown() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.InputPipelineAnalysisResult.input_time_breakdown)
  
  ::tensorflow::profiler::InputTimeBreakdown* temp = input_time_breakdown_;
  input_time_breakdown_ = nullptr;
  return temp;
}
inline ::tensorflow::profiler::InputTimeBreakdown* InputPipelineAnalysisResult::_internal_mutable_input_time_breakdown() {
  
  if (input_time_breakdown_ == nullptr) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::InputTimeBreakdown>(GetArenaNoVirtual());
    input_time_breakdown_ = p;
  }
  return input_time_breakdown_;
}
inline ::tensorflow::profiler::InputTimeBreakdown* InputPipelineAnalysisResult::mutable_input_time_breakdown() {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputPipelineAnalysisResult.input_time_breakdown)
  return _internal_mutable_input_time_breakdown();
}
inline void InputPipelineAnalysisResult::set_allocated_input_time_breakdown(::tensorflow::profiler::InputTimeBreakdown* input_time_breakdown) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete input_time_breakdown_;
  }
  if (input_time_breakdown) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      input_time_breakdown = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, input_time_breakdown, submessage_arena);
    }
    
  } else {
    
  }
  input_time_breakdown_ = input_time_breakdown;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.InputPipelineAnalysisResult.input_time_breakdown)
}

// repeated .tensorflow.profiler.InputOpDetails input_op_details = 6;
inline int InputPipelineAnalysisResult::_internal_input_op_details_size() const {
  return input_op_details_.size();
}
inline int InputPipelineAnalysisResult::input_op_details_size() const {
  return _internal_input_op_details_size();
}
inline void InputPipelineAnalysisResult::clear_input_op_details() {
  input_op_details_.Clear();
}
inline ::tensorflow::profiler::InputOpDetails* InputPipelineAnalysisResult::mutable_input_op_details(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputPipelineAnalysisResult.input_op_details)
  return input_op_details_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tensorflow::profiler::InputOpDetails >*
InputPipelineAnalysisResult::mutable_input_op_details() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.profiler.InputPipelineAnalysisResult.input_op_details)
  return &input_op_details_;
}
inline const ::tensorflow::profiler::InputOpDetails& InputPipelineAnalysisResult::_internal_input_op_details(int index) const {
  return input_op_details_.Get(index);
}
inline const ::tensorflow::profiler::InputOpDetails& InputPipelineAnalysisResult::input_op_details(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineAnalysisResult.input_op_details)
  return _internal_input_op_details(index);
}
inline ::tensorflow::profiler::InputOpDetails* InputPipelineAnalysisResult::_internal_add_input_op_details() {
  return input_op_details_.Add();
}
inline ::tensorflow::profiler::InputOpDetails* InputPipelineAnalysisResult::add_input_op_details() {
  // @@protoc_insertion_point(field_add:tensorflow.profiler.InputPipelineAnalysisResult.input_op_details)
  return _internal_add_input_op_details();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tensorflow::profiler::InputOpDetails >&
InputPipelineAnalysisResult::input_op_details() const {
  // @@protoc_insertion_point(field_list:tensorflow.profiler.InputPipelineAnalysisResult.input_op_details)
  return input_op_details_;
}

// .tensorflow.profiler.InputPipelineAnalysisRecommendation recommendation = 7;
inline bool InputPipelineAnalysisResult::_internal_has_recommendation() const {
  return this != internal_default_instance() && recommendation_ != nullptr;
}
inline bool InputPipelineAnalysisResult::has_recommendation() const {
  return _internal_has_recommendation();
}
inline void InputPipelineAnalysisResult::clear_recommendation() {
  if (GetArenaNoVirtual() == nullptr && recommendation_ != nullptr) {
    delete recommendation_;
  }
  recommendation_ = nullptr;
}
inline const ::tensorflow::profiler::InputPipelineAnalysisRecommendation& InputPipelineAnalysisResult::_internal_recommendation() const {
  const ::tensorflow::profiler::InputPipelineAnalysisRecommendation* p = recommendation_;
  return p != nullptr ? *p : *reinterpret_cast<const ::tensorflow::profiler::InputPipelineAnalysisRecommendation*>(
      &::tensorflow::profiler::_InputPipelineAnalysisRecommendation_default_instance_);
}
inline const ::tensorflow::profiler::InputPipelineAnalysisRecommendation& InputPipelineAnalysisResult::recommendation() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineAnalysisResult.recommendation)
  return _internal_recommendation();
}
inline ::tensorflow::profiler::InputPipelineAnalysisRecommendation* InputPipelineAnalysisResult::release_recommendation() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.InputPipelineAnalysisResult.recommendation)
  
  ::tensorflow::profiler::InputPipelineAnalysisRecommendation* temp = recommendation_;
  recommendation_ = nullptr;
  return temp;
}
inline ::tensorflow::profiler::InputPipelineAnalysisRecommendation* InputPipelineAnalysisResult::_internal_mutable_recommendation() {
  
  if (recommendation_ == nullptr) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::InputPipelineAnalysisRecommendation>(GetArenaNoVirtual());
    recommendation_ = p;
  }
  return recommendation_;
}
inline ::tensorflow::profiler::InputPipelineAnalysisRecommendation* InputPipelineAnalysisResult::mutable_recommendation() {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputPipelineAnalysisResult.recommendation)
  return _internal_mutable_recommendation();
}
inline void InputPipelineAnalysisResult::set_allocated_recommendation(::tensorflow::profiler::InputPipelineAnalysisRecommendation* recommendation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete recommendation_;
  }
  if (recommendation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      recommendation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, recommendation, submessage_arena);
    }
    
  } else {
    
  }
  recommendation_ = recommendation;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.InputPipelineAnalysisResult.recommendation)
}

// .google.protobuf.Any step_time_breakdown = 8;
inline bool InputPipelineAnalysisResult::_internal_has_step_time_breakdown() const {
  return this != internal_default_instance() && step_time_breakdown_ != nullptr;
}
inline bool InputPipelineAnalysisResult::has_step_time_breakdown() const {
  return _internal_has_step_time_breakdown();
}
inline const PROTOBUF_NAMESPACE_ID::Any& InputPipelineAnalysisResult::_internal_step_time_breakdown() const {
  const PROTOBUF_NAMESPACE_ID::Any* p = step_time_breakdown_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Any*>(
      &PROTOBUF_NAMESPACE_ID::_Any_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Any& InputPipelineAnalysisResult::step_time_breakdown() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.InputPipelineAnalysisResult.step_time_breakdown)
  return _internal_step_time_breakdown();
}
inline PROTOBUF_NAMESPACE_ID::Any* InputPipelineAnalysisResult::release_step_time_breakdown() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.InputPipelineAnalysisResult.step_time_breakdown)
  
  PROTOBUF_NAMESPACE_ID::Any* temp = step_time_breakdown_;
  step_time_breakdown_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Any* InputPipelineAnalysisResult::_internal_mutable_step_time_breakdown() {
  
  if (step_time_breakdown_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Any>(GetArenaNoVirtual());
    step_time_breakdown_ = p;
  }
  return step_time_breakdown_;
}
inline PROTOBUF_NAMESPACE_ID::Any* InputPipelineAnalysisResult::mutable_step_time_breakdown() {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.InputPipelineAnalysisResult.step_time_breakdown)
  return _internal_mutable_step_time_breakdown();
}
inline void InputPipelineAnalysisResult::set_allocated_step_time_breakdown(PROTOBUF_NAMESPACE_ID::Any* step_time_breakdown) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(step_time_breakdown_);
  }
  if (step_time_breakdown) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      step_time_breakdown = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, step_time_breakdown, submessage_arena);
    }
    
  } else {
    
  }
  step_time_breakdown_ = step_time_breakdown;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.InputPipelineAnalysisResult.step_time_breakdown)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace profiler
}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2fprotobuf_2finput_5fpipeline_2eproto
