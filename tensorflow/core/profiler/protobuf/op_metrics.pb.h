// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/profiler/protobuf/op_metrics.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3010000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3010001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto;
namespace tensorflow {
namespace profiler {
class LayoutAnalysis;
class LayoutAnalysisDefaultTypeInternal;
extern LayoutAnalysisDefaultTypeInternal _LayoutAnalysis_default_instance_;
class LayoutAnalysis_Dimension;
class LayoutAnalysis_DimensionDefaultTypeInternal;
extern LayoutAnalysis_DimensionDefaultTypeInternal _LayoutAnalysis_Dimension_default_instance_;
class OpMetrics;
class OpMetricsDefaultTypeInternal;
extern OpMetricsDefaultTypeInternal _OpMetrics_default_instance_;
class OpMetricsDb;
class OpMetricsDbDefaultTypeInternal;
extern OpMetricsDbDefaultTypeInternal _OpMetricsDb_default_instance_;
}  // namespace profiler
}  // namespace tensorflow
PROTOBUF_NAMESPACE_OPEN
template<> ::tensorflow::profiler::LayoutAnalysis* Arena::CreateMaybeMessage<::tensorflow::profiler::LayoutAnalysis>(Arena*);
template<> ::tensorflow::profiler::LayoutAnalysis_Dimension* Arena::CreateMaybeMessage<::tensorflow::profiler::LayoutAnalysis_Dimension>(Arena*);
template<> ::tensorflow::profiler::OpMetrics* Arena::CreateMaybeMessage<::tensorflow::profiler::OpMetrics>(Arena*);
template<> ::tensorflow::profiler::OpMetricsDb* Arena::CreateMaybeMessage<::tensorflow::profiler::OpMetricsDb>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace tensorflow {
namespace profiler {

enum LayoutDimensionSemantics : int {
  UNKNOWN_SEMANTICS = 0,
  FEATURE = 1,
  BATCH = 2,
  SPATIAL = 3,
  LayoutDimensionSemantics_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  LayoutDimensionSemantics_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool LayoutDimensionSemantics_IsValid(int value);
constexpr LayoutDimensionSemantics LayoutDimensionSemantics_MIN = UNKNOWN_SEMANTICS;
constexpr LayoutDimensionSemantics LayoutDimensionSemantics_MAX = SPATIAL;
constexpr int LayoutDimensionSemantics_ARRAYSIZE = LayoutDimensionSemantics_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LayoutDimensionSemantics_descriptor();
template<typename T>
inline const std::string& LayoutDimensionSemantics_Name(T enum_t_value) {
  static_assert(::std::is_same<T, LayoutDimensionSemantics>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function LayoutDimensionSemantics_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    LayoutDimensionSemantics_descriptor(), enum_t_value);
}
inline bool LayoutDimensionSemantics_Parse(
    const std::string& name, LayoutDimensionSemantics* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<LayoutDimensionSemantics>(
    LayoutDimensionSemantics_descriptor(), name, value);
}
// ===================================================================

class LayoutAnalysis_Dimension :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.LayoutAnalysis.Dimension) */ {
 public:
  LayoutAnalysis_Dimension();
  virtual ~LayoutAnalysis_Dimension();

  LayoutAnalysis_Dimension(const LayoutAnalysis_Dimension& from);
  LayoutAnalysis_Dimension(LayoutAnalysis_Dimension&& from) noexcept
    : LayoutAnalysis_Dimension() {
    *this = ::std::move(from);
  }

  inline LayoutAnalysis_Dimension& operator=(const LayoutAnalysis_Dimension& from) {
    CopyFrom(from);
    return *this;
  }
  inline LayoutAnalysis_Dimension& operator=(LayoutAnalysis_Dimension&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LayoutAnalysis_Dimension& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LayoutAnalysis_Dimension* internal_default_instance() {
    return reinterpret_cast<const LayoutAnalysis_Dimension*>(
               &_LayoutAnalysis_Dimension_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(LayoutAnalysis_Dimension& a, LayoutAnalysis_Dimension& b) {
    a.Swap(&b);
  }
  inline void Swap(LayoutAnalysis_Dimension* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LayoutAnalysis_Dimension* New() const final {
    return CreateMaybeMessage<LayoutAnalysis_Dimension>(nullptr);
  }

  LayoutAnalysis_Dimension* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LayoutAnalysis_Dimension>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LayoutAnalysis_Dimension& from);
  void MergeFrom(const LayoutAnalysis_Dimension& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LayoutAnalysis_Dimension* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tensorflow.profiler.LayoutAnalysis.Dimension";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto);
    return ::descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSizeFieldNumber = 1,
    kAlignmentFieldNumber = 2,
    kSemanticsFieldNumber = 3,
  };
  // int32 size = 1;
  void clear_size();
  ::PROTOBUF_NAMESPACE_ID::int32 size() const;
  void set_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_size() const;
  void _internal_set_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 alignment = 2;
  void clear_alignment();
  ::PROTOBUF_NAMESPACE_ID::int32 alignment() const;
  void set_alignment(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_alignment() const;
  void _internal_set_alignment(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // .tensorflow.profiler.LayoutDimensionSemantics semantics = 3;
  void clear_semantics();
  ::tensorflow::profiler::LayoutDimensionSemantics semantics() const;
  void set_semantics(::tensorflow::profiler::LayoutDimensionSemantics value);
  private:
  ::tensorflow::profiler::LayoutDimensionSemantics _internal_semantics() const;
  void _internal_set_semantics(::tensorflow::profiler::LayoutDimensionSemantics value);
  public:

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.LayoutAnalysis.Dimension)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 size_;
  ::PROTOBUF_NAMESPACE_ID::int32 alignment_;
  int semantics_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto;
};
// -------------------------------------------------------------------

class LayoutAnalysis :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.LayoutAnalysis) */ {
 public:
  LayoutAnalysis();
  virtual ~LayoutAnalysis();

  LayoutAnalysis(const LayoutAnalysis& from);
  LayoutAnalysis(LayoutAnalysis&& from) noexcept
    : LayoutAnalysis() {
    *this = ::std::move(from);
  }

  inline LayoutAnalysis& operator=(const LayoutAnalysis& from) {
    CopyFrom(from);
    return *this;
  }
  inline LayoutAnalysis& operator=(LayoutAnalysis&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LayoutAnalysis& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LayoutAnalysis* internal_default_instance() {
    return reinterpret_cast<const LayoutAnalysis*>(
               &_LayoutAnalysis_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(LayoutAnalysis& a, LayoutAnalysis& b) {
    a.Swap(&b);
  }
  inline void Swap(LayoutAnalysis* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LayoutAnalysis* New() const final {
    return CreateMaybeMessage<LayoutAnalysis>(nullptr);
  }

  LayoutAnalysis* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LayoutAnalysis>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LayoutAnalysis& from);
  void MergeFrom(const LayoutAnalysis& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LayoutAnalysis* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tensorflow.profiler.LayoutAnalysis";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto);
    return ::descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef LayoutAnalysis_Dimension Dimension;

  // accessors -------------------------------------------------------

  enum : int {
    kDimensionsFieldNumber = 1,
  };
  // repeated .tensorflow.profiler.LayoutAnalysis.Dimension dimensions = 1;
  int dimensions_size() const;
  private:
  int _internal_dimensions_size() const;
  public:
  void clear_dimensions();
  ::tensorflow::profiler::LayoutAnalysis_Dimension* mutable_dimensions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tensorflow::profiler::LayoutAnalysis_Dimension >*
      mutable_dimensions();
  private:
  const ::tensorflow::profiler::LayoutAnalysis_Dimension& _internal_dimensions(int index) const;
  ::tensorflow::profiler::LayoutAnalysis_Dimension* _internal_add_dimensions();
  public:
  const ::tensorflow::profiler::LayoutAnalysis_Dimension& dimensions(int index) const;
  ::tensorflow::profiler::LayoutAnalysis_Dimension* add_dimensions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tensorflow::profiler::LayoutAnalysis_Dimension >&
      dimensions() const;

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.LayoutAnalysis)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tensorflow::profiler::LayoutAnalysis_Dimension > dimensions_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto;
};
// -------------------------------------------------------------------

class OpMetrics :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.OpMetrics) */ {
 public:
  OpMetrics();
  virtual ~OpMetrics();

  OpMetrics(const OpMetrics& from);
  OpMetrics(OpMetrics&& from) noexcept
    : OpMetrics() {
    *this = ::std::move(from);
  }

  inline OpMetrics& operator=(const OpMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpMetrics& operator=(OpMetrics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OpMetrics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpMetrics* internal_default_instance() {
    return reinterpret_cast<const OpMetrics*>(
               &_OpMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(OpMetrics& a, OpMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(OpMetrics* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OpMetrics* New() const final {
    return CreateMaybeMessage<OpMetrics>(nullptr);
  }

  OpMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OpMetrics>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OpMetrics& from);
  void MergeFrom(const OpMetrics& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OpMetrics* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tensorflow.profiler.OpMetrics";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto);
    return ::descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 6,
    kCategoryFieldNumber = 11,
    kProvenanceFieldNumber = 12,
    kDeduplicatedNameFieldNumber = 15,
    kLayoutFieldNumber = 14,
    kChildrenFieldNumber = 16,
    kSelfTimePsFieldNumber = 1,
    kFlopsFieldNumber = 2,
    kBytesAccessedFieldNumber = 5,
    kTimePsFieldNumber = 7,
    kDmaStallPsFieldNumber = 10,
    kHloModuleIdFieldNumber = 13,
    kOccurrencesFieldNumber = 3,
    kMinTimePsFieldNumber = 17,
  };
  // string name = 6;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string category = 11;
  void clear_category();
  const std::string& category() const;
  void set_category(const std::string& value);
  void set_category(std::string&& value);
  void set_category(const char* value);
  void set_category(const char* value, size_t size);
  std::string* mutable_category();
  std::string* release_category();
  void set_allocated_category(std::string* category);
  private:
  const std::string& _internal_category() const;
  void _internal_set_category(const std::string& value);
  std::string* _internal_mutable_category();
  public:

  // string provenance = 12;
  void clear_provenance();
  const std::string& provenance() const;
  void set_provenance(const std::string& value);
  void set_provenance(std::string&& value);
  void set_provenance(const char* value);
  void set_provenance(const char* value, size_t size);
  std::string* mutable_provenance();
  std::string* release_provenance();
  void set_allocated_provenance(std::string* provenance);
  private:
  const std::string& _internal_provenance() const;
  void _internal_set_provenance(const std::string& value);
  std::string* _internal_mutable_provenance();
  public:

  // string deduplicated_name = 15;
  void clear_deduplicated_name();
  const std::string& deduplicated_name() const;
  void set_deduplicated_name(const std::string& value);
  void set_deduplicated_name(std::string&& value);
  void set_deduplicated_name(const char* value);
  void set_deduplicated_name(const char* value, size_t size);
  std::string* mutable_deduplicated_name();
  std::string* release_deduplicated_name();
  void set_allocated_deduplicated_name(std::string* deduplicated_name);
  private:
  const std::string& _internal_deduplicated_name() const;
  void _internal_set_deduplicated_name(const std::string& value);
  std::string* _internal_mutable_deduplicated_name();
  public:

  // .tensorflow.profiler.LayoutAnalysis layout = 14;
  bool has_layout() const;
  private:
  bool _internal_has_layout() const;
  public:
  void clear_layout();
  const ::tensorflow::profiler::LayoutAnalysis& layout() const;
  ::tensorflow::profiler::LayoutAnalysis* release_layout();
  ::tensorflow::profiler::LayoutAnalysis* mutable_layout();
  void set_allocated_layout(::tensorflow::profiler::LayoutAnalysis* layout);
  private:
  const ::tensorflow::profiler::LayoutAnalysis& _internal_layout() const;
  ::tensorflow::profiler::LayoutAnalysis* _internal_mutable_layout();
  public:

  // .tensorflow.profiler.OpMetricsDb children = 16;
  bool has_children() const;
  private:
  bool _internal_has_children() const;
  public:
  void clear_children();
  const ::tensorflow::profiler::OpMetricsDb& children() const;
  ::tensorflow::profiler::OpMetricsDb* release_children();
  ::tensorflow::profiler::OpMetricsDb* mutable_children();
  void set_allocated_children(::tensorflow::profiler::OpMetricsDb* children);
  private:
  const ::tensorflow::profiler::OpMetricsDb& _internal_children() const;
  ::tensorflow::profiler::OpMetricsDb* _internal_mutable_children();
  public:

  // uint64 self_time_ps = 1;
  void clear_self_time_ps();
  ::PROTOBUF_NAMESPACE_ID::uint64 self_time_ps() const;
  void set_self_time_ps(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_self_time_ps() const;
  void _internal_set_self_time_ps(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 flops = 2;
  void clear_flops();
  ::PROTOBUF_NAMESPACE_ID::uint64 flops() const;
  void set_flops(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_flops() const;
  void _internal_set_flops(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 bytes_accessed = 5;
  void clear_bytes_accessed();
  ::PROTOBUF_NAMESPACE_ID::uint64 bytes_accessed() const;
  void set_bytes_accessed(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_bytes_accessed() const;
  void _internal_set_bytes_accessed(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 time_ps = 7;
  void clear_time_ps();
  ::PROTOBUF_NAMESPACE_ID::uint64 time_ps() const;
  void set_time_ps(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_time_ps() const;
  void _internal_set_time_ps(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 dma_stall_ps = 10;
  void clear_dma_stall_ps();
  ::PROTOBUF_NAMESPACE_ID::uint64 dma_stall_ps() const;
  void set_dma_stall_ps(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_dma_stall_ps() const;
  void _internal_set_dma_stall_ps(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 hlo_module_id = 13;
  void clear_hlo_module_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 hlo_module_id() const;
  void set_hlo_module_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_hlo_module_id() const;
  void _internal_set_hlo_module_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 occurrences = 3;
  void clear_occurrences();
  ::PROTOBUF_NAMESPACE_ID::uint32 occurrences() const;
  void set_occurrences(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_occurrences() const;
  void _internal_set_occurrences(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 min_time_ps = 17;
  void clear_min_time_ps();
  ::PROTOBUF_NAMESPACE_ID::uint64 min_time_ps() const;
  void set_min_time_ps(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_min_time_ps() const;
  void _internal_set_min_time_ps(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.OpMetrics)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr category_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr provenance_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr deduplicated_name_;
  ::tensorflow::profiler::LayoutAnalysis* layout_;
  ::tensorflow::profiler::OpMetricsDb* children_;
  ::PROTOBUF_NAMESPACE_ID::uint64 self_time_ps_;
  ::PROTOBUF_NAMESPACE_ID::uint64 flops_;
  ::PROTOBUF_NAMESPACE_ID::uint64 bytes_accessed_;
  ::PROTOBUF_NAMESPACE_ID::uint64 time_ps_;
  ::PROTOBUF_NAMESPACE_ID::uint64 dma_stall_ps_;
  ::PROTOBUF_NAMESPACE_ID::uint64 hlo_module_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 occurrences_;
  ::PROTOBUF_NAMESPACE_ID::uint64 min_time_ps_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto;
};
// -------------------------------------------------------------------

class OpMetricsDb :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tensorflow.profiler.OpMetricsDb) */ {
 public:
  OpMetricsDb();
  virtual ~OpMetricsDb();

  OpMetricsDb(const OpMetricsDb& from);
  OpMetricsDb(OpMetricsDb&& from) noexcept
    : OpMetricsDb() {
    *this = ::std::move(from);
  }

  inline OpMetricsDb& operator=(const OpMetricsDb& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpMetricsDb& operator=(OpMetricsDb&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OpMetricsDb& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpMetricsDb* internal_default_instance() {
    return reinterpret_cast<const OpMetricsDb*>(
               &_OpMetricsDb_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(OpMetricsDb& a, OpMetricsDb& b) {
    a.Swap(&b);
  }
  inline void Swap(OpMetricsDb* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OpMetricsDb* New() const final {
    return CreateMaybeMessage<OpMetricsDb>(nullptr);
  }

  OpMetricsDb* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OpMetricsDb>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OpMetricsDb& from);
  void MergeFrom(const OpMetricsDb& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OpMetricsDb* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tensorflow.profiler.OpMetricsDb";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto);
    return ::descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMetricsDbFieldNumber = 10,
    kTotalHostInfeedEnqDurationPsFieldNumber = 2,
    kTotalHostInfeedEnqStartTimestampPsDiffFieldNumber = 3,
    kTotalTimePsFieldNumber = 11,
    kTotalOpTimePsFieldNumber = 12,
  };
  // repeated .tensorflow.profiler.OpMetrics metrics_db = 10;
  int metrics_db_size() const;
  private:
  int _internal_metrics_db_size() const;
  public:
  void clear_metrics_db();
  ::tensorflow::profiler::OpMetrics* mutable_metrics_db(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tensorflow::profiler::OpMetrics >*
      mutable_metrics_db();
  private:
  const ::tensorflow::profiler::OpMetrics& _internal_metrics_db(int index) const;
  ::tensorflow::profiler::OpMetrics* _internal_add_metrics_db();
  public:
  const ::tensorflow::profiler::OpMetrics& metrics_db(int index) const;
  ::tensorflow::profiler::OpMetrics* add_metrics_db();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tensorflow::profiler::OpMetrics >&
      metrics_db() const;

  // uint64 total_host_infeed_enq_duration_ps = 2;
  void clear_total_host_infeed_enq_duration_ps();
  ::PROTOBUF_NAMESPACE_ID::uint64 total_host_infeed_enq_duration_ps() const;
  void set_total_host_infeed_enq_duration_ps(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_total_host_infeed_enq_duration_ps() const;
  void _internal_set_total_host_infeed_enq_duration_ps(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 total_host_infeed_enq_start_timestamp_ps_diff = 3;
  void clear_total_host_infeed_enq_start_timestamp_ps_diff();
  ::PROTOBUF_NAMESPACE_ID::uint64 total_host_infeed_enq_start_timestamp_ps_diff() const;
  void set_total_host_infeed_enq_start_timestamp_ps_diff(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_total_host_infeed_enq_start_timestamp_ps_diff() const;
  void _internal_set_total_host_infeed_enq_start_timestamp_ps_diff(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 total_time_ps = 11;
  void clear_total_time_ps();
  ::PROTOBUF_NAMESPACE_ID::uint64 total_time_ps() const;
  void set_total_time_ps(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_total_time_ps() const;
  void _internal_set_total_time_ps(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 total_op_time_ps = 12;
  void clear_total_op_time_ps();
  ::PROTOBUF_NAMESPACE_ID::uint64 total_op_time_ps() const;
  void set_total_op_time_ps(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_total_op_time_ps() const;
  void _internal_set_total_op_time_ps(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:tensorflow.profiler.OpMetricsDb)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tensorflow::profiler::OpMetrics > metrics_db_;
  ::PROTOBUF_NAMESPACE_ID::uint64 total_host_infeed_enq_duration_ps_;
  ::PROTOBUF_NAMESPACE_ID::uint64 total_host_infeed_enq_start_timestamp_ps_diff_;
  ::PROTOBUF_NAMESPACE_ID::uint64 total_time_ps_;
  ::PROTOBUF_NAMESPACE_ID::uint64 total_op_time_ps_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LayoutAnalysis_Dimension

// int32 size = 1;
inline void LayoutAnalysis_Dimension::clear_size() {
  size_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LayoutAnalysis_Dimension::_internal_size() const {
  return size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LayoutAnalysis_Dimension::size() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.LayoutAnalysis.Dimension.size)
  return _internal_size();
}
inline void LayoutAnalysis_Dimension::_internal_set_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  size_ = value;
}
inline void LayoutAnalysis_Dimension::set_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.LayoutAnalysis.Dimension.size)
}

// int32 alignment = 2;
inline void LayoutAnalysis_Dimension::clear_alignment() {
  alignment_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LayoutAnalysis_Dimension::_internal_alignment() const {
  return alignment_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LayoutAnalysis_Dimension::alignment() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.LayoutAnalysis.Dimension.alignment)
  return _internal_alignment();
}
inline void LayoutAnalysis_Dimension::_internal_set_alignment(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  alignment_ = value;
}
inline void LayoutAnalysis_Dimension::set_alignment(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_alignment(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.LayoutAnalysis.Dimension.alignment)
}

// .tensorflow.profiler.LayoutDimensionSemantics semantics = 3;
inline void LayoutAnalysis_Dimension::clear_semantics() {
  semantics_ = 0;
}
inline ::tensorflow::profiler::LayoutDimensionSemantics LayoutAnalysis_Dimension::_internal_semantics() const {
  return static_cast< ::tensorflow::profiler::LayoutDimensionSemantics >(semantics_);
}
inline ::tensorflow::profiler::LayoutDimensionSemantics LayoutAnalysis_Dimension::semantics() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.LayoutAnalysis.Dimension.semantics)
  return _internal_semantics();
}
inline void LayoutAnalysis_Dimension::_internal_set_semantics(::tensorflow::profiler::LayoutDimensionSemantics value) {
  
  semantics_ = value;
}
inline void LayoutAnalysis_Dimension::set_semantics(::tensorflow::profiler::LayoutDimensionSemantics value) {
  _internal_set_semantics(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.LayoutAnalysis.Dimension.semantics)
}

// -------------------------------------------------------------------

// LayoutAnalysis

// repeated .tensorflow.profiler.LayoutAnalysis.Dimension dimensions = 1;
inline int LayoutAnalysis::_internal_dimensions_size() const {
  return dimensions_.size();
}
inline int LayoutAnalysis::dimensions_size() const {
  return _internal_dimensions_size();
}
inline void LayoutAnalysis::clear_dimensions() {
  dimensions_.Clear();
}
inline ::tensorflow::profiler::LayoutAnalysis_Dimension* LayoutAnalysis::mutable_dimensions(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.LayoutAnalysis.dimensions)
  return dimensions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tensorflow::profiler::LayoutAnalysis_Dimension >*
LayoutAnalysis::mutable_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.profiler.LayoutAnalysis.dimensions)
  return &dimensions_;
}
inline const ::tensorflow::profiler::LayoutAnalysis_Dimension& LayoutAnalysis::_internal_dimensions(int index) const {
  return dimensions_.Get(index);
}
inline const ::tensorflow::profiler::LayoutAnalysis_Dimension& LayoutAnalysis::dimensions(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.LayoutAnalysis.dimensions)
  return _internal_dimensions(index);
}
inline ::tensorflow::profiler::LayoutAnalysis_Dimension* LayoutAnalysis::_internal_add_dimensions() {
  return dimensions_.Add();
}
inline ::tensorflow::profiler::LayoutAnalysis_Dimension* LayoutAnalysis::add_dimensions() {
  // @@protoc_insertion_point(field_add:tensorflow.profiler.LayoutAnalysis.dimensions)
  return _internal_add_dimensions();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tensorflow::profiler::LayoutAnalysis_Dimension >&
LayoutAnalysis::dimensions() const {
  // @@protoc_insertion_point(field_list:tensorflow.profiler.LayoutAnalysis.dimensions)
  return dimensions_;
}

// -------------------------------------------------------------------

// OpMetrics

// uint64 hlo_module_id = 13;
inline void OpMetrics::clear_hlo_module_id() {
  hlo_module_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 OpMetrics::_internal_hlo_module_id() const {
  return hlo_module_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 OpMetrics::hlo_module_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpMetrics.hlo_module_id)
  return _internal_hlo_module_id();
}
inline void OpMetrics::_internal_set_hlo_module_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  hlo_module_id_ = value;
}
inline void OpMetrics::set_hlo_module_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_hlo_module_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.OpMetrics.hlo_module_id)
}

// string name = 6;
inline void OpMetrics::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& OpMetrics::name() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpMetrics.name)
  return _internal_name();
}
inline void OpMetrics::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.OpMetrics.name)
}
inline std::string* OpMetrics::mutable_name() {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.OpMetrics.name)
  return _internal_mutable_name();
}
inline const std::string& OpMetrics::_internal_name() const {
  return name_.GetNoArena();
}
inline void OpMetrics::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void OpMetrics::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.OpMetrics.name)
}
inline void OpMetrics::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.OpMetrics.name)
}
inline void OpMetrics::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.OpMetrics.name)
}
inline std::string* OpMetrics::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* OpMetrics::release_name() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.OpMetrics.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void OpMetrics::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.OpMetrics.name)
}

// string category = 11;
inline void OpMetrics::clear_category() {
  category_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& OpMetrics::category() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpMetrics.category)
  return _internal_category();
}
inline void OpMetrics::set_category(const std::string& value) {
  _internal_set_category(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.OpMetrics.category)
}
inline std::string* OpMetrics::mutable_category() {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.OpMetrics.category)
  return _internal_mutable_category();
}
inline const std::string& OpMetrics::_internal_category() const {
  return category_.GetNoArena();
}
inline void OpMetrics::_internal_set_category(const std::string& value) {
  
  category_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void OpMetrics::set_category(std::string&& value) {
  
  category_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.OpMetrics.category)
}
inline void OpMetrics::set_category(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  category_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.OpMetrics.category)
}
inline void OpMetrics::set_category(const char* value, size_t size) {
  
  category_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.OpMetrics.category)
}
inline std::string* OpMetrics::_internal_mutable_category() {
  
  return category_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* OpMetrics::release_category() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.OpMetrics.category)
  
  return category_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void OpMetrics::set_allocated_category(std::string* category) {
  if (category != nullptr) {
    
  } else {
    
  }
  category_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), category);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.OpMetrics.category)
}

// string provenance = 12;
inline void OpMetrics::clear_provenance() {
  provenance_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& OpMetrics::provenance() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpMetrics.provenance)
  return _internal_provenance();
}
inline void OpMetrics::set_provenance(const std::string& value) {
  _internal_set_provenance(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.OpMetrics.provenance)
}
inline std::string* OpMetrics::mutable_provenance() {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.OpMetrics.provenance)
  return _internal_mutable_provenance();
}
inline const std::string& OpMetrics::_internal_provenance() const {
  return provenance_.GetNoArena();
}
inline void OpMetrics::_internal_set_provenance(const std::string& value) {
  
  provenance_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void OpMetrics::set_provenance(std::string&& value) {
  
  provenance_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.OpMetrics.provenance)
}
inline void OpMetrics::set_provenance(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  provenance_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.OpMetrics.provenance)
}
inline void OpMetrics::set_provenance(const char* value, size_t size) {
  
  provenance_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.OpMetrics.provenance)
}
inline std::string* OpMetrics::_internal_mutable_provenance() {
  
  return provenance_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* OpMetrics::release_provenance() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.OpMetrics.provenance)
  
  return provenance_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void OpMetrics::set_allocated_provenance(std::string* provenance) {
  if (provenance != nullptr) {
    
  } else {
    
  }
  provenance_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), provenance);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.OpMetrics.provenance)
}

// uint32 occurrences = 3;
inline void OpMetrics::clear_occurrences() {
  occurrences_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 OpMetrics::_internal_occurrences() const {
  return occurrences_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 OpMetrics::occurrences() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpMetrics.occurrences)
  return _internal_occurrences();
}
inline void OpMetrics::_internal_set_occurrences(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  occurrences_ = value;
}
inline void OpMetrics::set_occurrences(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_occurrences(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.OpMetrics.occurrences)
}

// uint64 time_ps = 7;
inline void OpMetrics::clear_time_ps() {
  time_ps_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 OpMetrics::_internal_time_ps() const {
  return time_ps_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 OpMetrics::time_ps() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpMetrics.time_ps)
  return _internal_time_ps();
}
inline void OpMetrics::_internal_set_time_ps(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  time_ps_ = value;
}
inline void OpMetrics::set_time_ps(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_time_ps(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.OpMetrics.time_ps)
}

// uint64 min_time_ps = 17;
inline void OpMetrics::clear_min_time_ps() {
  min_time_ps_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 OpMetrics::_internal_min_time_ps() const {
  return min_time_ps_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 OpMetrics::min_time_ps() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpMetrics.min_time_ps)
  return _internal_min_time_ps();
}
inline void OpMetrics::_internal_set_min_time_ps(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  min_time_ps_ = value;
}
inline void OpMetrics::set_min_time_ps(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_min_time_ps(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.OpMetrics.min_time_ps)
}

// uint64 self_time_ps = 1;
inline void OpMetrics::clear_self_time_ps() {
  self_time_ps_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 OpMetrics::_internal_self_time_ps() const {
  return self_time_ps_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 OpMetrics::self_time_ps() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpMetrics.self_time_ps)
  return _internal_self_time_ps();
}
inline void OpMetrics::_internal_set_self_time_ps(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  self_time_ps_ = value;
}
inline void OpMetrics::set_self_time_ps(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_self_time_ps(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.OpMetrics.self_time_ps)
}

// uint64 flops = 2;
inline void OpMetrics::clear_flops() {
  flops_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 OpMetrics::_internal_flops() const {
  return flops_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 OpMetrics::flops() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpMetrics.flops)
  return _internal_flops();
}
inline void OpMetrics::_internal_set_flops(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  flops_ = value;
}
inline void OpMetrics::set_flops(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_flops(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.OpMetrics.flops)
}

// uint64 bytes_accessed = 5;
inline void OpMetrics::clear_bytes_accessed() {
  bytes_accessed_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 OpMetrics::_internal_bytes_accessed() const {
  return bytes_accessed_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 OpMetrics::bytes_accessed() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpMetrics.bytes_accessed)
  return _internal_bytes_accessed();
}
inline void OpMetrics::_internal_set_bytes_accessed(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  bytes_accessed_ = value;
}
inline void OpMetrics::set_bytes_accessed(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_bytes_accessed(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.OpMetrics.bytes_accessed)
}

// uint64 dma_stall_ps = 10;
inline void OpMetrics::clear_dma_stall_ps() {
  dma_stall_ps_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 OpMetrics::_internal_dma_stall_ps() const {
  return dma_stall_ps_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 OpMetrics::dma_stall_ps() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpMetrics.dma_stall_ps)
  return _internal_dma_stall_ps();
}
inline void OpMetrics::_internal_set_dma_stall_ps(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  dma_stall_ps_ = value;
}
inline void OpMetrics::set_dma_stall_ps(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_dma_stall_ps(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.OpMetrics.dma_stall_ps)
}

// .tensorflow.profiler.LayoutAnalysis layout = 14;
inline bool OpMetrics::_internal_has_layout() const {
  return this != internal_default_instance() && layout_ != nullptr;
}
inline bool OpMetrics::has_layout() const {
  return _internal_has_layout();
}
inline void OpMetrics::clear_layout() {
  if (GetArenaNoVirtual() == nullptr && layout_ != nullptr) {
    delete layout_;
  }
  layout_ = nullptr;
}
inline const ::tensorflow::profiler::LayoutAnalysis& OpMetrics::_internal_layout() const {
  const ::tensorflow::profiler::LayoutAnalysis* p = layout_;
  return p != nullptr ? *p : *reinterpret_cast<const ::tensorflow::profiler::LayoutAnalysis*>(
      &::tensorflow::profiler::_LayoutAnalysis_default_instance_);
}
inline const ::tensorflow::profiler::LayoutAnalysis& OpMetrics::layout() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpMetrics.layout)
  return _internal_layout();
}
inline ::tensorflow::profiler::LayoutAnalysis* OpMetrics::release_layout() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.OpMetrics.layout)
  
  ::tensorflow::profiler::LayoutAnalysis* temp = layout_;
  layout_ = nullptr;
  return temp;
}
inline ::tensorflow::profiler::LayoutAnalysis* OpMetrics::_internal_mutable_layout() {
  
  if (layout_ == nullptr) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::LayoutAnalysis>(GetArenaNoVirtual());
    layout_ = p;
  }
  return layout_;
}
inline ::tensorflow::profiler::LayoutAnalysis* OpMetrics::mutable_layout() {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.OpMetrics.layout)
  return _internal_mutable_layout();
}
inline void OpMetrics::set_allocated_layout(::tensorflow::profiler::LayoutAnalysis* layout) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete layout_;
  }
  if (layout) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      layout = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, layout, submessage_arena);
    }
    
  } else {
    
  }
  layout_ = layout;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.OpMetrics.layout)
}

// string deduplicated_name = 15;
inline void OpMetrics::clear_deduplicated_name() {
  deduplicated_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& OpMetrics::deduplicated_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpMetrics.deduplicated_name)
  return _internal_deduplicated_name();
}
inline void OpMetrics::set_deduplicated_name(const std::string& value) {
  _internal_set_deduplicated_name(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.OpMetrics.deduplicated_name)
}
inline std::string* OpMetrics::mutable_deduplicated_name() {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.OpMetrics.deduplicated_name)
  return _internal_mutable_deduplicated_name();
}
inline const std::string& OpMetrics::_internal_deduplicated_name() const {
  return deduplicated_name_.GetNoArena();
}
inline void OpMetrics::_internal_set_deduplicated_name(const std::string& value) {
  
  deduplicated_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void OpMetrics::set_deduplicated_name(std::string&& value) {
  
  deduplicated_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.profiler.OpMetrics.deduplicated_name)
}
inline void OpMetrics::set_deduplicated_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  deduplicated_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.profiler.OpMetrics.deduplicated_name)
}
inline void OpMetrics::set_deduplicated_name(const char* value, size_t size) {
  
  deduplicated_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.profiler.OpMetrics.deduplicated_name)
}
inline std::string* OpMetrics::_internal_mutable_deduplicated_name() {
  
  return deduplicated_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* OpMetrics::release_deduplicated_name() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.OpMetrics.deduplicated_name)
  
  return deduplicated_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void OpMetrics::set_allocated_deduplicated_name(std::string* deduplicated_name) {
  if (deduplicated_name != nullptr) {
    
  } else {
    
  }
  deduplicated_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), deduplicated_name);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.OpMetrics.deduplicated_name)
}

// .tensorflow.profiler.OpMetricsDb children = 16;
inline bool OpMetrics::_internal_has_children() const {
  return this != internal_default_instance() && children_ != nullptr;
}
inline bool OpMetrics::has_children() const {
  return _internal_has_children();
}
inline void OpMetrics::clear_children() {
  if (GetArenaNoVirtual() == nullptr && children_ != nullptr) {
    delete children_;
  }
  children_ = nullptr;
}
inline const ::tensorflow::profiler::OpMetricsDb& OpMetrics::_internal_children() const {
  const ::tensorflow::profiler::OpMetricsDb* p = children_;
  return p != nullptr ? *p : *reinterpret_cast<const ::tensorflow::profiler::OpMetricsDb*>(
      &::tensorflow::profiler::_OpMetricsDb_default_instance_);
}
inline const ::tensorflow::profiler::OpMetricsDb& OpMetrics::children() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpMetrics.children)
  return _internal_children();
}
inline ::tensorflow::profiler::OpMetricsDb* OpMetrics::release_children() {
  // @@protoc_insertion_point(field_release:tensorflow.profiler.OpMetrics.children)
  
  ::tensorflow::profiler::OpMetricsDb* temp = children_;
  children_ = nullptr;
  return temp;
}
inline ::tensorflow::profiler::OpMetricsDb* OpMetrics::_internal_mutable_children() {
  
  if (children_ == nullptr) {
    auto* p = CreateMaybeMessage<::tensorflow::profiler::OpMetricsDb>(GetArenaNoVirtual());
    children_ = p;
  }
  return children_;
}
inline ::tensorflow::profiler::OpMetricsDb* OpMetrics::mutable_children() {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.OpMetrics.children)
  return _internal_mutable_children();
}
inline void OpMetrics::set_allocated_children(::tensorflow::profiler::OpMetricsDb* children) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete children_;
  }
  if (children) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      children = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, children, submessage_arena);
    }
    
  } else {
    
  }
  children_ = children;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.profiler.OpMetrics.children)
}

// -------------------------------------------------------------------

// OpMetricsDb

// repeated .tensorflow.profiler.OpMetrics metrics_db = 10;
inline int OpMetricsDb::_internal_metrics_db_size() const {
  return metrics_db_.size();
}
inline int OpMetricsDb::metrics_db_size() const {
  return _internal_metrics_db_size();
}
inline void OpMetricsDb::clear_metrics_db() {
  metrics_db_.Clear();
}
inline ::tensorflow::profiler::OpMetrics* OpMetricsDb::mutable_metrics_db(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.profiler.OpMetricsDb.metrics_db)
  return metrics_db_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tensorflow::profiler::OpMetrics >*
OpMetricsDb::mutable_metrics_db() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.profiler.OpMetricsDb.metrics_db)
  return &metrics_db_;
}
inline const ::tensorflow::profiler::OpMetrics& OpMetricsDb::_internal_metrics_db(int index) const {
  return metrics_db_.Get(index);
}
inline const ::tensorflow::profiler::OpMetrics& OpMetricsDb::metrics_db(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpMetricsDb.metrics_db)
  return _internal_metrics_db(index);
}
inline ::tensorflow::profiler::OpMetrics* OpMetricsDb::_internal_add_metrics_db() {
  return metrics_db_.Add();
}
inline ::tensorflow::profiler::OpMetrics* OpMetricsDb::add_metrics_db() {
  // @@protoc_insertion_point(field_add:tensorflow.profiler.OpMetricsDb.metrics_db)
  return _internal_add_metrics_db();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tensorflow::profiler::OpMetrics >&
OpMetricsDb::metrics_db() const {
  // @@protoc_insertion_point(field_list:tensorflow.profiler.OpMetricsDb.metrics_db)
  return metrics_db_;
}

// uint64 total_host_infeed_enq_duration_ps = 2;
inline void OpMetricsDb::clear_total_host_infeed_enq_duration_ps() {
  total_host_infeed_enq_duration_ps_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 OpMetricsDb::_internal_total_host_infeed_enq_duration_ps() const {
  return total_host_infeed_enq_duration_ps_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 OpMetricsDb::total_host_infeed_enq_duration_ps() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpMetricsDb.total_host_infeed_enq_duration_ps)
  return _internal_total_host_infeed_enq_duration_ps();
}
inline void OpMetricsDb::_internal_set_total_host_infeed_enq_duration_ps(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  total_host_infeed_enq_duration_ps_ = value;
}
inline void OpMetricsDb::set_total_host_infeed_enq_duration_ps(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_total_host_infeed_enq_duration_ps(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.OpMetricsDb.total_host_infeed_enq_duration_ps)
}

// uint64 total_host_infeed_enq_start_timestamp_ps_diff = 3;
inline void OpMetricsDb::clear_total_host_infeed_enq_start_timestamp_ps_diff() {
  total_host_infeed_enq_start_timestamp_ps_diff_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 OpMetricsDb::_internal_total_host_infeed_enq_start_timestamp_ps_diff() const {
  return total_host_infeed_enq_start_timestamp_ps_diff_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 OpMetricsDb::total_host_infeed_enq_start_timestamp_ps_diff() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpMetricsDb.total_host_infeed_enq_start_timestamp_ps_diff)
  return _internal_total_host_infeed_enq_start_timestamp_ps_diff();
}
inline void OpMetricsDb::_internal_set_total_host_infeed_enq_start_timestamp_ps_diff(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  total_host_infeed_enq_start_timestamp_ps_diff_ = value;
}
inline void OpMetricsDb::set_total_host_infeed_enq_start_timestamp_ps_diff(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_total_host_infeed_enq_start_timestamp_ps_diff(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.OpMetricsDb.total_host_infeed_enq_start_timestamp_ps_diff)
}

// uint64 total_time_ps = 11;
inline void OpMetricsDb::clear_total_time_ps() {
  total_time_ps_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 OpMetricsDb::_internal_total_time_ps() const {
  return total_time_ps_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 OpMetricsDb::total_time_ps() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpMetricsDb.total_time_ps)
  return _internal_total_time_ps();
}
inline void OpMetricsDb::_internal_set_total_time_ps(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  total_time_ps_ = value;
}
inline void OpMetricsDb::set_total_time_ps(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_total_time_ps(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.OpMetricsDb.total_time_ps)
}

// uint64 total_op_time_ps = 12;
inline void OpMetricsDb::clear_total_op_time_ps() {
  total_op_time_ps_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 OpMetricsDb::_internal_total_op_time_ps() const {
  return total_op_time_ps_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 OpMetricsDb::total_op_time_ps() const {
  // @@protoc_insertion_point(field_get:tensorflow.profiler.OpMetricsDb.total_op_time_ps)
  return _internal_total_op_time_ps();
}
inline void OpMetricsDb::_internal_set_total_op_time_ps(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  total_op_time_ps_ = value;
}
inline void OpMetricsDb::set_total_op_time_ps(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_total_op_time_ps(value);
  // @@protoc_insertion_point(field_set:tensorflow.profiler.OpMetricsDb.total_op_time_ps)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace profiler
}  // namespace tensorflow

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::tensorflow::profiler::LayoutDimensionSemantics> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tensorflow::profiler::LayoutDimensionSemantics>() {
  return ::tensorflow::profiler::LayoutDimensionSemantics_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2fprotobuf_2fop_5fmetrics_2eproto
