// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/lite/toco/types.proto

#include "tensorflow/lite/toco/types.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace toco {
}  // namespace toco
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_tensorflow_2flite_2ftoco_2ftypes_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_tensorflow_2flite_2ftoco_2ftypes_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_tensorflow_2flite_2ftoco_2ftypes_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_tensorflow_2flite_2ftoco_2ftypes_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_tensorflow_2flite_2ftoco_2ftypes_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n tensorflow/lite/toco/types.proto\022\004toco"
  "*\255\001\n\nIODataType\022\030\n\024IO_DATA_TYPE_UNKNOWN\020"
  "\000\022\t\n\005FLOAT\020\001\022\023\n\017QUANTIZED_UINT8\020\002\022\t\n\005INT"
  "32\020\003\022\t\n\005INT64\020\004\022\n\n\006STRING\020\005\022\023\n\017QUANTIZED"
  "_INT16\020\006\022\010\n\004BOOL\020\007\022\r\n\tCOMPLEX64\020\010\022\010\n\004INT"
  "8\020\t\022\013\n\007FLOAT16\020\n"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_tensorflow_2flite_2ftoco_2ftypes_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_tensorflow_2flite_2ftoco_2ftypes_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_tensorflow_2flite_2ftoco_2ftypes_2eproto_once;
static bool descriptor_table_tensorflow_2flite_2ftoco_2ftypes_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tensorflow_2flite_2ftoco_2ftypes_2eproto = {
  &descriptor_table_tensorflow_2flite_2ftoco_2ftypes_2eproto_initialized, descriptor_table_protodef_tensorflow_2flite_2ftoco_2ftypes_2eproto, "tensorflow/lite/toco/types.proto", 216,
  &descriptor_table_tensorflow_2flite_2ftoco_2ftypes_2eproto_once, descriptor_table_tensorflow_2flite_2ftoco_2ftypes_2eproto_sccs, descriptor_table_tensorflow_2flite_2ftoco_2ftypes_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_tensorflow_2flite_2ftoco_2ftypes_2eproto::offsets,
  file_level_metadata_tensorflow_2flite_2ftoco_2ftypes_2eproto, 0, file_level_enum_descriptors_tensorflow_2flite_2ftoco_2ftypes_2eproto, file_level_service_descriptors_tensorflow_2flite_2ftoco_2ftypes_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_tensorflow_2flite_2ftoco_2ftypes_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_tensorflow_2flite_2ftoco_2ftypes_2eproto), true);
namespace toco {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* IODataType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_tensorflow_2flite_2ftoco_2ftypes_2eproto);
  return file_level_enum_descriptors_tensorflow_2flite_2ftoco_2ftypes_2eproto[0];
}
bool IODataType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace toco
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
